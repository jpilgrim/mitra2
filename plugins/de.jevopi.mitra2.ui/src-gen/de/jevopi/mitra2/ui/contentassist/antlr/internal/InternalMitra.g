/*
* generated by Xtext
*/
grammar InternalMitra;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	 memoize=true;
	
	 k=2;
	
}

@lexer::header {
package de.jevopi.mitra2.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.jevopi.mitra2.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.jevopi.mitra2.services.MitraGrammarAccess;

}

@parser::members {
 
 	private MitraGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MitraGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleReference
entryRuleModuleReference 
:
{ before(grammarAccess.getModuleReferenceRule()); }
	 ruleModuleReference
{ after(grammarAccess.getModuleReferenceRule()); } 
	 EOF 
;

// Rule ModuleReference
ruleModuleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleReferenceAccess().getModuleAssignment()); }
(rule__ModuleReference__ModuleAssignment)
{ after(grammarAccess.getModuleReferenceAccess().getModuleAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodelDeclaration
entryRuleMetamodelDeclaration 
:
{ before(grammarAccess.getMetamodelDeclarationRule()); }
	 ruleMetamodelDeclaration
{ after(grammarAccess.getMetamodelDeclarationRule()); } 
	 EOF 
;

// Rule MetamodelDeclaration
ruleMetamodelDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getGroup()); }
(rule__MetamodelDeclaration__Group__0)
{ after(grammarAccess.getMetamodelDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleDeclaration
entryRuleRuleDeclaration 
:
{ before(grammarAccess.getRuleDeclarationRule()); }
	 ruleRuleDeclaration
{ after(grammarAccess.getRuleDeclarationRule()); } 
	 EOF 
;

// Rule RuleDeclaration
ruleRuleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup()); }
(rule__RuleDeclaration__Group__0)
{ after(grammarAccess.getRuleDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleSimpleRuleReference
entryRuleSimpleRuleReference 
:
{ before(grammarAccess.getSimpleRuleReferenceRule()); }
	 ruleSimpleRuleReference
{ after(grammarAccess.getSimpleRuleReferenceRule()); } 
	 EOF 
;

// Rule SimpleRuleReference
ruleSimpleRuleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getGroup()); }
(rule__SimpleRuleReference__Group__0)
{ after(grammarAccess.getSimpleRuleReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedRuleReference
entryRuleQualifiedRuleReference 
:
{ before(grammarAccess.getQualifiedRuleReferenceRule()); }
	 ruleQualifiedRuleReference
{ after(grammarAccess.getQualifiedRuleReferenceRule()); } 
	 EOF 
;

// Rule QualifiedRuleReference
ruleQualifiedRuleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getGroup()); }
(rule__QualifiedRuleReference__Group__0)
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleSimpleParameterReference
entryRuleSimpleParameterReference 
:
{ before(grammarAccess.getSimpleParameterReferenceRule()); }
	 ruleSimpleParameterReference
{ after(grammarAccess.getSimpleParameterReferenceRule()); } 
	 EOF 
;

// Rule SimpleParameterReference
ruleSimpleParameterReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleParameterReferenceAccess().getGroup()); }
(rule__SimpleParameterReference__Group__0)
{ after(grammarAccess.getSimpleParameterReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedParameterReference
entryRuleQualifiedParameterReference 
:
{ before(grammarAccess.getQualifiedParameterReferenceRule()); }
	 ruleQualifiedParameterReference
{ after(grammarAccess.getQualifiedParameterReferenceRule()); } 
	 EOF 
;

// Rule QualifiedParameterReference
ruleQualifiedParameterReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedParameterReferenceAccess().getVardeclAssignment()); }
(rule__QualifiedParameterReference__VardeclAssignment)
{ after(grammarAccess.getQualifiedParameterReferenceAccess().getVardeclAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrigger
entryRuleTrigger 
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerAccess().getGroup()); }
(rule__Trigger__Group__0)
{ after(grammarAccess.getTriggerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJavaSpec
entryRuleJavaSpec 
:
{ before(grammarAccess.getJavaSpecRule()); }
	 ruleJavaSpec
{ after(grammarAccess.getJavaSpecRule()); } 
	 EOF 
;

// Rule JavaSpec
ruleJavaSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaSpecAccess().getGroup()); }
(rule__JavaSpec__Group__0)
{ after(grammarAccess.getJavaSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleFormalParameter
entryRuleFormalParameter 
:
{ before(grammarAccess.getFormalParameterRule()); }
	 ruleFormalParameter
{ after(grammarAccess.getFormalParameterRule()); } 
	 EOF 
;

// Rule FormalParameter
ruleFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterAccess().getGroup()); }
(rule__FormalParameter__Group__0)
{ after(grammarAccess.getFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnParameter
entryRuleReturnParameter 
:
{ before(grammarAccess.getReturnParameterRule()); }
	 ruleReturnParameter
{ after(grammarAccess.getReturnParameterRule()); } 
	 EOF 
;

// Rule ReturnParameter
ruleReturnParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnParameterAccess().getGroup()); }
(rule__ReturnParameter__Group__0)
{ after(grammarAccess.getReturnParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceType
entryRuleReferenceType 
:
{ before(grammarAccess.getReferenceTypeRule()); }
	 ruleReferenceType
{ after(grammarAccess.getReferenceTypeRule()); } 
	 EOF 
;

// Rule ReferenceType
ruleReferenceType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceTypeAccess().getGroup()); }
(rule__ReferenceType__Group__0)
{ after(grammarAccess.getReferenceTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveType
entryRulePrimitiveType 
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeAssignment()); }
(rule__PrimitiveType__PrimitiveTypeAssignment)
{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionType
entryRuleCollectionType 
:
{ before(grammarAccess.getCollectionTypeRule()); }
	 ruleCollectionType
{ after(grammarAccess.getCollectionTypeRule()); } 
	 EOF 
;

// Rule CollectionType
ruleCollectionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionTypeAccess().getGroup()); }
(rule__CollectionType__Group__0)
{ after(grammarAccess.getCollectionTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockStatement
entryRuleBlockStatement 
:
{ before(grammarAccess.getBlockStatementRule()); }
	 ruleBlockStatement
{ after(grammarAccess.getBlockStatementRule()); } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockStatementAccess().getAlternatives()); }
(rule__BlockStatement__Alternatives)
{ after(grammarAccess.getBlockStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVariableDeclarationStatement
entryRuleLocalVariableDeclarationStatement 
:
{ before(grammarAccess.getLocalVariableDeclarationStatementRule()); }
	 ruleLocalVariableDeclarationStatement
{ after(grammarAccess.getLocalVariableDeclarationStatementRule()); } 
	 EOF 
;

// Rule LocalVariableDeclarationStatement
ruleLocalVariableDeclarationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableDeclarationStatementAccess().getGroup()); }
(rule__LocalVariableDeclarationStatement__Group__0)
{ after(grammarAccess.getLocalVariableDeclarationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVariableDeclaration
entryRuleLocalVariableDeclaration 
:
{ before(grammarAccess.getLocalVariableDeclarationRule()); }
	 ruleLocalVariableDeclaration
{ after(grammarAccess.getLocalVariableDeclarationRule()); } 
	 EOF 
;

// Rule LocalVariableDeclaration
ruleLocalVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
(rule__LocalVariableDeclaration__Group__0)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDeclaration
entryRuleVarDeclaration 
:
{ before(grammarAccess.getVarDeclarationRule()); }
	 ruleVarDeclaration
{ after(grammarAccess.getVarDeclarationRule()); } 
	 EOF 
;

// Rule VarDeclaration
ruleVarDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclarationAccess().getAlternatives()); }
(rule__VarDeclaration__Alternatives)
{ after(grammarAccess.getVarDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedVarDeclaration
entryRuleTypedVarDeclaration 
:
{ before(grammarAccess.getTypedVarDeclarationRule()); }
	 ruleTypedVarDeclaration
{ after(grammarAccess.getTypedVarDeclarationRule()); } 
	 EOF 
;

// Rule TypedVarDeclaration
ruleTypedVarDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedVarDeclarationAccess().getGroup()); }
(rule__TypedVarDeclaration__Group__0)
{ after(grammarAccess.getTypedVarDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInferredVarDeclaration
entryRuleInferredVarDeclaration 
:
{ before(grammarAccess.getInferredVarDeclarationRule()); }
	 ruleInferredVarDeclaration
{ after(grammarAccess.getInferredVarDeclarationRule()); } 
	 EOF 
;

// Rule InferredVarDeclaration
ruleInferredVarDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInferredVarDeclarationAccess().getGroup()); }
(rule__InferredVarDeclaration__Group__0)
{ after(grammarAccess.getInferredVarDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement 
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionStatementAccess().getGroup()); }
(rule__ExpressionStatement__Group__0)
{ after(grammarAccess.getExpressionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementExpression
entryRuleStatementExpression 
:
{ before(grammarAccess.getStatementExpressionRule()); }
	 ruleStatementExpression
{ after(grammarAccess.getStatementExpressionRule()); } 
	 EOF 
;

// Rule StatementExpression
ruleStatementExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementExpressionAccess().getAlternatives()); }
(rule__StatementExpression__Alternatives)
{ after(grammarAccess.getStatementExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmptyStatement
entryRuleEmptyStatement 
:
{ before(grammarAccess.getEmptyStatementRule()); }
	 ruleEmptyStatement
{ after(grammarAccess.getEmptyStatementRule()); } 
	 EOF 
;

// Rule EmptyStatement
ruleEmptyStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmptyStatementAccess().getGroup()); }
(rule__EmptyStatement__Group__0)
{ after(grammarAccess.getEmptyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoStatement
entryRuleDoStatement 
:
{ before(grammarAccess.getDoStatementRule()); }
	 ruleDoStatement
{ after(grammarAccess.getDoStatementRule()); } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoStatementAccess().getGroup()); }
(rule__DoStatement__Group__0)
{ after(grammarAccess.getDoStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForInit
entryRuleForInit 
:
{ before(grammarAccess.getForInitRule()); }
	 ruleForInit
{ after(grammarAccess.getForInitRule()); } 
	 EOF 
;

// Rule ForInit
ruleForInit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForInitAccess().getGroup()); }
(rule__ForInit__Group__0)
{ after(grammarAccess.getForInitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForUpdate
entryRuleForUpdate 
:
{ before(grammarAccess.getForUpdateRule()); }
	 ruleForUpdate
{ after(grammarAccess.getForUpdateRule()); } 
	 EOF 
;

// Rule ForUpdate
ruleForUpdate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForUpdateAccess().getGroup()); }
(rule__ForUpdate__Group__0)
{ after(grammarAccess.getForUpdateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStatement
entryRuleForStatement 
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStatementAccess().getGroup()); }
(rule__ForStatement__Group__0)
{ after(grammarAccess.getForStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopVariable
entryRuleLoopVariable 
:
{ before(grammarAccess.getLoopVariableRule()); }
	 ruleLoopVariable
{ after(grammarAccess.getLoopVariableRule()); } 
	 EOF 
;

// Rule LoopVariable
ruleLoopVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopVariableAccess().getVardeclAssignment()); }
(rule__LoopVariable__VardeclAssignment)
{ after(grammarAccess.getLoopVariableAccess().getVardeclAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakStatement
entryRuleBreakStatement 
:
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakStatementAccess().getGroup()); }
(rule__BreakStatement__Group__0)
{ after(grammarAccess.getBreakStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThrowStatement
entryRuleThrowStatement 
:
{ before(grammarAccess.getThrowStatementRule()); }
	 ruleThrowStatement
{ after(grammarAccess.getThrowStatementRule()); } 
	 EOF 
;

// Rule ThrowStatement
ruleThrowStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThrowStatementAccess().getGroup()); }
(rule__ThrowStatement__Group__0)
{ after(grammarAccess.getThrowStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryStatement
entryRuleTryStatement 
:
{ before(grammarAccess.getTryStatementRule()); }
	 ruleTryStatement
{ after(grammarAccess.getTryStatementRule()); } 
	 EOF 
;

// Rule TryStatement
ruleTryStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryStatementAccess().getGroup()); }
(rule__TryStatement__Group__0)
{ after(grammarAccess.getTryStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCatch
entryRuleCatch 
:
{ before(grammarAccess.getCatchRule()); }
	 ruleCatch
{ after(grammarAccess.getCatchRule()); } 
	 EOF 
;

// Rule Catch
ruleCatch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCatchAccess().getGroup()); }
(rule__Catch__Group__0)
{ after(grammarAccess.getCatchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getExpression_10ParserRuleCall()); }
	ruleExpression_10
{ after(grammarAccess.getExpressionAccess().getExpression_10ParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_10
entryRuleExpression_10 
:
{ before(grammarAccess.getExpression_10Rule()); }
	 ruleExpression_10
{ after(grammarAccess.getExpression_10Rule()); } 
	 EOF 
;

// Rule Expression_10
ruleExpression_10
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_10Access().getAlternatives()); }
(rule__Expression_10__Alternatives)
{ after(grammarAccess.getExpression_10Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_1
entryRuleExpression_1 
:
{ before(grammarAccess.getExpression_1Rule()); }
	 ruleExpression_1
{ after(grammarAccess.getExpression_1Rule()); } 
	 EOF 
;

// Rule Expression_1
ruleExpression_1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_1Access().getGroup()); }
(rule__Expression_1__Group__0)
{ after(grammarAccess.getExpression_1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_2
entryRuleExpression_2 
:
{ before(grammarAccess.getExpression_2Rule()); }
	 ruleExpression_2
{ after(grammarAccess.getExpression_2Rule()); } 
	 EOF 
;

// Rule Expression_2
ruleExpression_2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_2Access().getGroup()); }
(rule__Expression_2__Group__0)
{ after(grammarAccess.getExpression_2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_3
entryRuleExpression_3 
:
{ before(grammarAccess.getExpression_3Rule()); }
	 ruleExpression_3
{ after(grammarAccess.getExpression_3Rule()); } 
	 EOF 
;

// Rule Expression_3
ruleExpression_3
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_3Access().getGroup()); }
(rule__Expression_3__Group__0)
{ after(grammarAccess.getExpression_3Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_5
entryRuleExpression_5 
:
{ before(grammarAccess.getExpression_5Rule()); }
	 ruleExpression_5
{ after(grammarAccess.getExpression_5Rule()); } 
	 EOF 
;

// Rule Expression_5
ruleExpression_5
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_5Access().getGroup()); }
(rule__Expression_5__Group__0)
{ after(grammarAccess.getExpression_5Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_6
entryRuleExpression_6 
:
{ before(grammarAccess.getExpression_6Rule()); }
	 ruleExpression_6
{ after(grammarAccess.getExpression_6Rule()); } 
	 EOF 
;

// Rule Expression_6
ruleExpression_6
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_6Access().getAlternatives()); }
(rule__Expression_6__Alternatives)
{ after(grammarAccess.getExpression_6Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_7
entryRuleExpression_7 
:
{ before(grammarAccess.getExpression_7Rule()); }
	 ruleExpression_7
{ after(grammarAccess.getExpression_7Rule()); } 
	 EOF 
;

// Rule Expression_7
ruleExpression_7
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_7Access().getAlternatives()); }
(rule__Expression_7__Alternatives)
{ after(grammarAccess.getExpression_7Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_8
entryRuleExpression_8 
:
{ before(grammarAccess.getExpression_8Rule()); }
	 ruleExpression_8
{ after(grammarAccess.getExpression_8Rule()); } 
	 EOF 
;

// Rule Expression_8
ruleExpression_8
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_8Access().getAlternatives()); }
(rule__Expression_8__Alternatives)
{ after(grammarAccess.getExpression_8Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_9
entryRuleExpression_9 
:
{ before(grammarAccess.getExpression_9Rule()); }
	 ruleExpression_9
{ after(grammarAccess.getExpression_9Rule()); } 
	 EOF 
;

// Rule Expression_9
ruleExpression_9
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_9Access().getGroup()); }
(rule__Expression_9__Group__0)
{ after(grammarAccess.getExpression_9Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_11
entryRuleExpression_11 
:
{ before(grammarAccess.getExpression_11Rule()); }
	 ruleExpression_11
{ after(grammarAccess.getExpression_11Rule()); } 
	 EOF 
;

// Rule Expression_11
ruleExpression_11
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_11Access().getAlternatives()); }
(rule__Expression_11__Alternatives)
{ after(grammarAccess.getExpression_11Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getStringValueAssignment()); }
(rule__StringLiteral__StringValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getStringValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getIntValueAssignment()); }
(rule__IntLiteral__IntValueAssignment)
{ after(grammarAccess.getIntLiteralAccess().getIntValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteral
entryRuleRealLiteral 
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealLiteralAccess().getFloatValueAssignment()); }
(rule__RealLiteral__FloatValueAssignment)
{ after(grammarAccess.getRealLiteralAccess().getFloatValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
(rule__NullLiteral__Group__0)
{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassInstanceCreationExpression
entryRuleClassInstanceCreationExpression 
:
{ before(grammarAccess.getClassInstanceCreationExpressionRule()); }
	 ruleClassInstanceCreationExpression
{ after(grammarAccess.getClassInstanceCreationExpressionRule()); } 
	 EOF 
;

// Rule ClassInstanceCreationExpression
ruleClassInstanceCreationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup()); }
(rule__ClassInstanceCreationExpression__Group__0)
{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleInvocation
entryRuleRuleInvocation 
:
{ before(grammarAccess.getRuleInvocationRule()); }
	 ruleRuleInvocation
{ after(grammarAccess.getRuleInvocationRule()); } 
	 EOF 
;

// Rule RuleInvocation
ruleRuleInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleInvocationAccess().getGroup()); }
(rule__RuleInvocation__Group__0)
{ after(grammarAccess.getRuleInvocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleInvocationSuper
entryRuleRuleInvocationSuper 
:
{ before(grammarAccess.getRuleInvocationSuperRule()); }
	 ruleRuleInvocationSuper
{ after(grammarAccess.getRuleInvocationSuperRule()); } 
	 EOF 
;

// Rule RuleInvocationSuper
ruleRuleInvocationSuper
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleInvocationSuperAccess().getGroup()); }
(rule__RuleInvocationSuper__Group__0)
{ after(grammarAccess.getRuleInvocationSuperAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
(rule__Feature__Alternatives)
{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodInvocation
entryRuleMethodInvocation 
:
{ before(grammarAccess.getMethodInvocationRule()); }
	 ruleMethodInvocation
{ after(grammarAccess.getMethodInvocationRule()); } 
	 EOF 
;

// Rule MethodInvocation
ruleMethodInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodInvocationAccess().getAlternatives()); }
(rule__MethodInvocation__Alternatives)
{ after(grammarAccess.getMethodInvocationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureMethodInvocation
entryRuleFeatureMethodInvocation 
:
{ before(grammarAccess.getFeatureMethodInvocationRule()); }
	 ruleFeatureMethodInvocation
{ after(grammarAccess.getFeatureMethodInvocationRule()); } 
	 EOF 
;

// Rule FeatureMethodInvocation
ruleFeatureMethodInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getGroup()); }
(rule__FeatureMethodInvocation__Group__0)
{ after(grammarAccess.getFeatureMethodInvocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNativeOperationInvocation
entryRuleNativeOperationInvocation 
:
{ before(grammarAccess.getNativeOperationInvocationRule()); }
	 ruleNativeOperationInvocation
{ after(grammarAccess.getNativeOperationInvocationRule()); } 
	 EOF 
;

// Rule NativeOperationInvocation
ruleNativeOperationInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getGroup()); }
(rule__NativeOperationInvocation__Group__0)
{ after(grammarAccess.getNativeOperationInvocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleFeatureField
entryRuleFeatureField 
:
{ before(grammarAccess.getFeatureFieldRule()); }
	 ruleFeatureField
{ after(grammarAccess.getFeatureFieldRule()); } 
	 EOF 
;

// Rule FeatureField
ruleFeatureField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureFieldAccess().getGroup()); }
(rule__FeatureField__Group__0)
{ after(grammarAccess.getFeatureFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableAccess
entryRuleVariableAccess 
:
{ before(grammarAccess.getVariableAccessRule()); }
	 ruleVariableAccess
{ after(grammarAccess.getVariableAccessRule()); } 
	 EOF 
;

// Rule VariableAccess
ruleVariableAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccessAccess().getAlternatives()); }
(rule__VariableAccess__Alternatives)
{ after(grammarAccess.getVariableAccessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticAccess
entryRuleStaticAccess 
:
{ before(grammarAccess.getStaticAccessRule()); }
	 ruleStaticAccess
{ after(grammarAccess.getStaticAccessRule()); } 
	 EOF 
;

// Rule StaticAccess
ruleStaticAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticAccessAccess().getGroup()); }
(rule__StaticAccess__Group__0)
{ after(grammarAccess.getStaticAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationsDefinition
entryRuleAnnotationsDefinition 
:
{ before(grammarAccess.getAnnotationsDefinitionRule()); }
	 ruleAnnotationsDefinition
{ after(grammarAccess.getAnnotationsDefinitionRule()); } 
	 EOF 
;

// Rule AnnotationsDefinition
ruleAnnotationsDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getAnnotationsDefinitionAccess().getAnnotationDeclsAssignment()); }
(rule__AnnotationsDefinition__AnnotationDeclsAssignment)
{ after(grammarAccess.getAnnotationsDefinitionAccess().getAnnotationDeclsAssignment()); }
)
(
{ before(grammarAccess.getAnnotationsDefinitionAccess().getAnnotationDeclsAssignment()); }
(rule__AnnotationsDefinition__AnnotationDeclsAssignment)*
{ after(grammarAccess.getAnnotationsDefinitionAccess().getAnnotationDeclsAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationDecl
entryRuleAnnotationDecl 
:
{ before(grammarAccess.getAnnotationDeclRule()); }
	 ruleAnnotationDecl
{ after(grammarAccess.getAnnotationDeclRule()); } 
	 EOF 
;

// Rule AnnotationDecl
ruleAnnotationDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationDeclAccess().getGroup()); }
(rule__AnnotationDecl__Group__0)
{ after(grammarAccess.getAnnotationDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationPropertyDecl
entryRuleAnnotationPropertyDecl 
:
{ before(grammarAccess.getAnnotationPropertyDeclRule()); }
	 ruleAnnotationPropertyDecl
{ after(grammarAccess.getAnnotationPropertyDeclRule()); } 
	 EOF 
;

// Rule AnnotationPropertyDecl
ruleAnnotationPropertyDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getGroup()); }
(rule__AnnotationPropertyDecl__Group__0)
{ after(grammarAccess.getAnnotationPropertyDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationProperty
entryRuleAnnotationProperty 
:
{ before(grammarAccess.getAnnotationPropertyRule()); }
	 ruleAnnotationProperty
{ after(grammarAccess.getAnnotationPropertyRule()); } 
	 EOF 
;

// Rule AnnotationProperty
ruleAnnotationProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationPropertyAccess().getGroup()); }
(rule__AnnotationProperty__Group__0)
{ after(grammarAccess.getAnnotationPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule VisibilityModifier
ruleVisibilityModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityModifierAccess().getAlternatives()); }
(rule__VisibilityModifier__Alternatives)
{ after(grammarAccess.getVisibilityModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ExecutionModifier
ruleExecutionModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionModifierAccess().getAlternatives()); }
(rule__ExecutionModifier__Alternatives)
{ after(grammarAccess.getExecutionModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FormalParameterModifier
ruleFormalParameterModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterModifierAccess().getAlternatives()); }
(rule__FormalParameterModifier__Alternatives)
{ after(grammarAccess.getFormalParameterModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ReturnParameterModifier
ruleReturnParameterModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterModifierAccess().getAlternatives()); }
(rule__ReturnParameterModifier__Alternatives)
{ after(grammarAccess.getReturnParameterModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PrimitiveTypeSpec
rulePrimitiveTypeSpec
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeSpecAccess().getAlternatives()); }
(rule__PrimitiveTypeSpec__Alternatives)
{ after(grammarAccess.getPrimitiveTypeSpecAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CollectionTypeSpec
ruleCollectionTypeSpec
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeSpecAccess().getAlternatives()); }
(rule__CollectionTypeSpec__Alternatives)
{ after(grammarAccess.getCollectionTypeSpecAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BooleanOperator
ruleBooleanOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanOperatorAccess().getAlternatives()); }
(rule__BooleanOperator__Alternatives)
{ after(grammarAccess.getBooleanOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule EqualityOperator
ruleEqualityOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
(rule__EqualityOperator__Alternatives)
{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RelationalOperator
ruleRelationalOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
(rule__RelationalOperator__Alternatives)
{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MathOperator
ruleMathOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOperatorAccess().getAlternatives()); }
(rule__MathOperator__Alternatives)
{ after(grammarAccess.getMathOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryMathOperator
ruleUnaryMathOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryMathOperatorAccess().getAlternatives()); }
(rule__UnaryMathOperator__Alternatives)
{ after(grammarAccess.getUnaryMathOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AssignmentOperator
ruleAssignmentOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
(rule__AssignmentOperator__Alternatives)
{ after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PPOperator
rulePPOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOperatorAccess().getAlternatives()); }
(rule__PPOperator__Alternatives)
{ after(grammarAccess.getPPOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AnnotationTargetSpec
ruleAnnotationTargetSpec
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTargetSpecAccess().getAlternatives()); }
(rule__AnnotationTargetSpec__Alternatives)
{ after(grammarAccess.getAnnotationTargetSpecAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RuleDeclaration__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getTracedAssignment_3_0()); }
(rule__RuleDeclaration__TracedAssignment_3_0)
{ after(grammarAccess.getRuleDeclarationAccess().getTracedAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getRuleDeclarationAccess().getStealthAssignment_3_1()); }
(rule__RuleDeclaration__StealthAssignment_3_1)
{ after(grammarAccess.getRuleDeclarationAccess().getStealthAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Alternatives_15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getSemicolonKeyword_15_0()); }

	';' 

{ after(grammarAccess.getRuleDeclarationAccess().getSemicolonKeyword_15_0()); }
)

    |(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_15_1()); }
(rule__RuleDeclaration__Group_15_1__0)
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_15_1()); }
)

    |(
{ before(grammarAccess.getRuleDeclarationAccess().getBodyAssignment_15_2()); }
(rule__RuleDeclaration__BodyAssignment_15_2)
{ after(grammarAccess.getRuleDeclarationAccess().getBodyAssignment_15_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
	rulePrimitiveType
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getCollectionTypeParserRuleCall_1()); }
	ruleCollectionType
{ after(grammarAccess.getTypeAccess().getCollectionTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getReferenceTypeParserRuleCall_2()); }
	ruleReferenceType
{ after(grammarAccess.getTypeAccess().getReferenceTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getLocalVariableDeclarationStatementParserRuleCall_0()); }
	ruleLocalVariableDeclarationStatement
{ after(grammarAccess.getBlockStatementAccess().getLocalVariableDeclarationStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlockStatementAccess().getStatementParserRuleCall_1()); }
	ruleStatement
{ after(grammarAccess.getBlockStatementAccess().getStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_1()); }
	ruleReturnStatement
{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2()); }
	ruleWhileStatement
{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_3()); }
	ruleDoStatement
{ after(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_4()); }
	ruleForStatement
{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_5()); }
	ruleBreakStatement
{ after(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_6()); }
	ruleThrowStatement
{ after(grammarAccess.getStatementAccess().getThrowStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getTryStatementParserRuleCall_7()); }
	ruleTryStatement
{ after(grammarAccess.getStatementAccess().getTryStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_8()); }
	ruleExpressionStatement
{ after(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_9()); }
	ruleEmptyStatement
{ after(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBlockParserRuleCall_10()); }
	ruleBlock
{ after(grammarAccess.getStatementAccess().getBlockParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclarationAccess().getTypedVarDeclarationParserRuleCall_0()); }
	ruleTypedVarDeclaration
{ after(grammarAccess.getVarDeclarationAccess().getTypedVarDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVarDeclarationAccess().getInferredVarDeclarationParserRuleCall_1()); }
	ruleInferredVarDeclaration
{ after(grammarAccess.getVarDeclarationAccess().getInferredVarDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getClassInstanceCreationExpressionParserRuleCall_0()); }
	ruleClassInstanceCreationExpression
{ after(grammarAccess.getStatementExpressionAccess().getClassInstanceCreationExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getRuleInvocationParserRuleCall_1()); }
	ruleRuleInvocation
{ after(grammarAccess.getStatementExpressionAccess().getRuleInvocationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getRuleInvocationSuperParserRuleCall_2()); }
	ruleRuleInvocationSuper
{ after(grammarAccess.getStatementExpressionAccess().getRuleInvocationSuperParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getStaticAccessParserRuleCall_3()); }
	ruleStaticAccess
{ after(grammarAccess.getStatementExpressionAccess().getStaticAccessParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_4()); }
(rule__StatementExpression__Group_4__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_4_1_0()); }
(rule__StatementExpression__Group_4_1_0__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_4_1_0()); }
)

    |(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_4_1_1()); }
(rule__StatementExpression__Group_4_1_1__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getStatementExpressionsAssignment_1_0()); }
(rule__ForInit__StatementExpressionsAssignment_1_0)
{ after(grammarAccess.getForInitAccess().getStatementExpressionsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getForInitAccess().getGroup_1_1()); }
(rule__ForInit__Group_1_1__0)
{ after(grammarAccess.getForInitAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getGroup_1_1_1_0()); }
(rule__ForInit__Group_1_1_1_0__0)
{ after(grammarAccess.getForInitAccess().getGroup_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getForInitAccess().getVarDeclarationsAssignment_1_1_1_1()); }
(rule__ForInit__VarDeclarationsAssignment_1_1_1_1)
{ after(grammarAccess.getForInitAccess().getVarDeclarationsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getGroup_2_0()); }
(rule__ForStatement__Group_2_0__0)
{ after(grammarAccess.getForStatementAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getForStatementAccess().getGroup_2_1()); }
(rule__ForStatement__Group_2_1__0)
{ after(grammarAccess.getForStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_10__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_10Access().getGroup_0()); }
(rule__Expression_10__Group_0__0)
{ after(grammarAccess.getExpression_10Access().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpression_10Access().getExpression_1ParserRuleCall_1()); }
	ruleExpression_1
{ after(grammarAccess.getExpression_10Access().getExpression_1ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_6__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_6Access().getGroup_0()); }
(rule__Expression_6__Group_0__0)
{ after(grammarAccess.getExpression_6Access().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpression_6Access().getExpression_7ParserRuleCall_1()); }
	ruleExpression_7
{ after(grammarAccess.getExpression_6Access().getExpression_7ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_7__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_7Access().getExpression_8ParserRuleCall_0()); }
	ruleExpression_8
{ after(grammarAccess.getExpression_7Access().getExpression_8ParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpression_7Access().getGroup_1()); }
(rule__Expression_7__Group_1__0)
{ after(grammarAccess.getExpression_7Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_8__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_8Access().getExpression_9ParserRuleCall_0()); }
	ruleExpression_9
{ after(grammarAccess.getExpression_8Access().getExpression_9ParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpression_8Access().getGroup_1()); }
(rule__Expression_8__Group_1__0)
{ after(grammarAccess.getExpression_8Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_11__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_11Access().getGroup_0()); }
(rule__Expression_11__Group_0__0)
{ after(grammarAccess.getExpression_11Access().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpression_11Access().getTerminalExpressionParserRuleCall_1()); }
	ruleTerminalExpression
{ after(grammarAccess.getExpression_11Access().getTerminalExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getTerminalExpressionAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getClassInstanceCreationExpressionParserRuleCall_1()); }
	ruleClassInstanceCreationExpression
{ after(grammarAccess.getTerminalExpressionAccess().getClassInstanceCreationExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getRuleInvocationParserRuleCall_2()); }
	ruleRuleInvocation
{ after(grammarAccess.getTerminalExpressionAccess().getRuleInvocationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getRuleInvocationSuperParserRuleCall_3()); }
	ruleRuleInvocationSuper
{ after(grammarAccess.getTerminalExpressionAccess().getRuleInvocationSuperParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getStaticAccessParserRuleCall_4()); }
	ruleStaticAccess
{ after(grammarAccess.getTerminalExpressionAccess().getStaticAccessParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getVariableAccessParserRuleCall_5()); }
	ruleVariableAccess
{ after(grammarAccess.getTerminalExpressionAccess().getVariableAccessParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
	ruleIntLiteral
{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_1()); }
	ruleRealLiteral
{ after(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_4()); }
	ruleNullLiteral
{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanValueAssignment_1_0()); }
(rule__BooleanLiteral__BooleanValueAssignment_1_0)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getMethodInvocationParserRuleCall_0()); }
	ruleMethodInvocation
{ after(grammarAccess.getFeatureAccess().getMethodInvocationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccess().getFeatureFieldParserRuleCall_1()); }
	ruleFeatureField
{ after(grammarAccess.getFeatureAccess().getFeatureFieldParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodInvocationAccess().getFeatureMethodInvocationParserRuleCall_0()); }
	ruleFeatureMethodInvocation
{ after(grammarAccess.getMethodInvocationAccess().getFeatureMethodInvocationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMethodInvocationAccess().getNativeOperationInvocationParserRuleCall_1()); }
	ruleNativeOperationInvocation
{ after(grammarAccess.getMethodInvocationAccess().getNativeOperationInvocationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getGroup_1_0()); }
(rule__FeatureMethodInvocation__Group_1_0__0)
{ after(grammarAccess.getFeatureMethodInvocationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getNameAssignment_1_1()); }
(rule__FeatureMethodInvocation__NameAssignment_1_1)
{ after(grammarAccess.getFeatureMethodInvocationAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureField__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureFieldAccess().getGroup_1_0()); }
(rule__FeatureField__Group_1_0__0)
{ after(grammarAccess.getFeatureFieldAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getFeatureFieldAccess().getNameAssignment_1_1()); }
(rule__FeatureField__NameAssignment_1_1)
{ after(grammarAccess.getFeatureFieldAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getGroup_0()); }
(rule__VariableAccess__Group_0__0)
{ after(grammarAccess.getVariableAccessAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVariableAccessAccess().getGroup_1()); }
(rule__VariableAccess__Group_1__0)
{ after(grammarAccess.getVariableAccessAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getGroup_1_2_0()); }
(rule__VariableAccess__Group_1_2_0__0)
{ after(grammarAccess.getVariableAccessAccess().getGroup_1_2_0()); }
)

    |(
{ before(grammarAccess.getVariableAccessAccess().getPostfixOperatorAssignment_1_2_1()); }
(rule__VariableAccess__PostfixOperatorAssignment_1_2_1)
{ after(grammarAccess.getVariableAccessAccess().getPostfixOperatorAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getGroup_1_0()); }
(rule__StaticAccess__Group_1_0__0)
{ after(grammarAccess.getStaticAccessAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getStaticAccessAccess().getTypeAssignment_1_1()); }
(rule__StaticAccess__TypeAssignment_1_1)
{ after(grammarAccess.getStaticAccessAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getGroup_4_0_0()); }
(rule__AnnotationDecl__Group_4_0_0__0)
{ after(grammarAccess.getAnnotationDeclAccess().getGroup_4_0_0()); }
)

    |(
{ before(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAssignment_4_0_1()); }
(rule__AnnotationDecl__PropertyDeclsAssignment_4_0_1)
{ after(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Alternatives_4_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getRequiredAssignment_4_0_0_3_0()); }
(rule__AnnotationDecl__RequiredAssignment_4_0_0_3_0)
{ after(grammarAccess.getAnnotationDeclAccess().getRequiredAssignment_4_0_0_3_0()); }
)

    |(
{ before(grammarAccess.getAnnotationDeclAccess().getGroup_4_0_0_3_1()); }
(rule__AnnotationDecl__Group_4_0_0_3_1__0)
{ after(grammarAccess.getAnnotationDeclAccess().getGroup_4_0_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getRequiredAssignment_2_0()); }
(rule__AnnotationPropertyDecl__RequiredAssignment_2_0)
{ after(grammarAccess.getAnnotationPropertyDeclAccess().getRequiredAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getGroup_2_1()); }
(rule__AnnotationPropertyDecl__Group_2_1__0)
{ after(grammarAccess.getAnnotationPropertyDeclAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValuesAssignment_2_1_0()); }
(rule__Annotation__ValuesAssignment_2_1_0)
{ after(grammarAccess.getAnnotationAccess().getValuesAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getPropertiesAssignment_2_1_1()); }
(rule__Annotation__PropertiesAssignment_2_1_1)
{ after(grammarAccess.getAnnotationAccess().getPropertiesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Alternatives_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValuesAssignment_2_2_1_0()); }
(rule__Annotation__ValuesAssignment_2_2_1_0)
{ after(grammarAccess.getAnnotationAccess().getValuesAssignment_2_2_1_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getPropertiesAssignment_2_2_1_1()); }
(rule__Annotation__PropertiesAssignment_2_2_1_1)
{ after(grammarAccess.getAnnotationAccess().getPropertiesAssignment_2_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityModifierAccess().getPublicEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityModifierAccess().getPublicEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityModifierAccess().getPrivateEnumLiteralDeclaration_1()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityModifierAccess().getPrivateEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionModifierAccess().getCalledEnumLiteralDeclaration_0()); }
(	'called' 
)
{ after(grammarAccess.getExecutionModifierAccess().getCalledEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getExecutionModifierAccess().getAbstractEnumLiteralDeclaration_1()); }
(	'abstract' 
)
{ after(grammarAccess.getExecutionModifierAccess().getAbstractEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getExecutionModifierAccess().getManualEnumLiteralDeclaration_2()); }
(	'manual' 
)
{ after(grammarAccess.getExecutionModifierAccess().getManualEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getExecutionModifierAccess().getAutoEnumLiteralDeclaration_3()); }
(	'auto' 
)
{ after(grammarAccess.getExecutionModifierAccess().getAutoEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getExecutionModifierAccess().getConfirmEnumLiteralDeclaration_4()); }
(	'confirm' 
)
{ after(grammarAccess.getExecutionModifierAccess().getConfirmEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterModifierAccess().getUseEnumLiteralDeclaration_0()); }
(	'use' 
)
{ after(grammarAccess.getFormalParameterModifierAccess().getUseEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFormalParameterModifierAccess().getFromEnumLiteralDeclaration_1()); }
(	'from' 
)
{ after(grammarAccess.getFormalParameterModifierAccess().getFromEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFormalParameterModifierAccess().getIntoEnumLiteralDeclaration_2()); }
(	'into' 
)
{ after(grammarAccess.getFormalParameterModifierAccess().getIntoEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterModifierAccess().getReturnEnumLiteralDeclaration_0()); }
(	'return' 
)
{ after(grammarAccess.getReturnParameterModifierAccess().getReturnEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getReturnParameterModifierAccess().getCreateEnumLiteralDeclaration_1()); }
(	'create' 
)
{ after(grammarAccess.getReturnParameterModifierAccess().getCreateEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeSpec__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeSpecAccess().getVoidEnumLiteralDeclaration_0()); }
(	'void' 
)
{ after(grammarAccess.getPrimitiveTypeSpecAccess().getVoidEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeSpecAccess().getAnyEnumLiteralDeclaration_1()); }
(	'any' 
)
{ after(grammarAccess.getPrimitiveTypeSpecAccess().getAnyEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeSpecAccess().getStringEnumLiteralDeclaration_2()); }
(	'String' 
)
{ after(grammarAccess.getPrimitiveTypeSpecAccess().getStringEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeSpecAccess().getIntEnumLiteralDeclaration_3()); }
(	'int' 
)
{ after(grammarAccess.getPrimitiveTypeSpecAccess().getIntEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeSpecAccess().getBooleanEnumLiteralDeclaration_4()); }
(	'boolean' 
)
{ after(grammarAccess.getPrimitiveTypeSpecAccess().getBooleanEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeSpecAccess().getRealEnumLiteralDeclaration_5()); }
(	'real' 
)
{ after(grammarAccess.getPrimitiveTypeSpecAccess().getRealEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeSpecAccess().getTypeEnumLiteralDeclaration_6()); }
(	'Type' 
)
{ after(grammarAccess.getPrimitiveTypeSpecAccess().getTypeEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTypeSpec__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeSpecAccess().getCollectionEnumLiteralDeclaration_0()); }
(	'Collection' 
)
{ after(grammarAccess.getCollectionTypeSpecAccess().getCollectionEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCollectionTypeSpecAccess().getSetEnumLiteralDeclaration_1()); }
(	'Set' 
)
{ after(grammarAccess.getCollectionTypeSpecAccess().getSetEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCollectionTypeSpecAccess().getOrderedSetEnumLiteralDeclaration_2()); }
(	'OrderedSet' 
)
{ after(grammarAccess.getCollectionTypeSpecAccess().getOrderedSetEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCollectionTypeSpecAccess().getBagEnumLiteralDeclaration_3()); }
(	'Bag' 
)
{ after(grammarAccess.getCollectionTypeSpecAccess().getBagEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCollectionTypeSpecAccess().getSequenceEnumLiteralDeclaration_4()); }
(	'Sequence' 
)
{ after(grammarAccess.getCollectionTypeSpecAccess().getSequenceEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanOperatorAccess().getAndEnumLiteralDeclaration_0()); }
(	'&' 
)
{ after(grammarAccess.getBooleanOperatorAccess().getAndEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBooleanOperatorAccess().getOrEnumLiteralDeclaration_1()); }
(	'|' 
)
{ after(grammarAccess.getBooleanOperatorAccess().getOrEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBooleanOperatorAccess().getAndscEnumLiteralDeclaration_2()); }
(	'&&' 
)
{ after(grammarAccess.getBooleanOperatorAccess().getAndscEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBooleanOperatorAccess().getOrscEnumLiteralDeclaration_3()); }
(	'||' 
)
{ after(grammarAccess.getBooleanOperatorAccess().getOrscEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getEqEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getEqEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEqualityOperatorAccess().getNeqEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getNeqEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOperatorAccess().getLtEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getLtEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGtEnumLiteralDeclaration_1()); }
(	'>' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getGtEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getLeqEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getLeqEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGeqEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getGeqEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MathOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOperatorAccess().getAddEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getMathOperatorAccess().getAddEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMathOperatorAccess().getSubEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getMathOperatorAccess().getSubEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMathOperatorAccess().getMulEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getMathOperatorAccess().getMulEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getMathOperatorAccess().getDivEnumLiteralDeclaration_3()); }
(	'/' 
)
{ after(grammarAccess.getMathOperatorAccess().getDivEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMathOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryMathOperatorAccess().getPlusEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getUnaryMathOperatorAccess().getPlusEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUnaryMathOperatorAccess().getMinusEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getUnaryMathOperatorAccess().getMinusEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getSetEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getSetEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getAddEnumLiteralDeclaration_1()); }
(	'+=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getAddEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getSubEnumLiteralDeclaration_2()); }
(	'-=' 
)
{ after(grammarAccess.getAssignmentOperatorAccess().getSubEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PPOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPPOperatorAccess().getIncEnumLiteralDeclaration_0()); }
(	'++' 
)
{ after(grammarAccess.getPPOperatorAccess().getIncEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPPOperatorAccess().getDecEnumLiteralDeclaration_1()); }
(	'--' 
)
{ after(grammarAccess.getPPOperatorAccess().getDecEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTargetSpec__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTargetSpecAccess().getModuleEnumLiteralDeclaration_0()); }
(	'module' 
)
{ after(grammarAccess.getAnnotationTargetSpecAccess().getModuleEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAnnotationTargetSpecAccess().getRuleEnumLiteralDeclaration_1()); }
(	'rule' 
)
{ after(grammarAccess.getAnnotationTargetSpecAccess().getRuleEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAnnotationTargetSpecAccess().getParameterEnumLiteralDeclaration_2()); }
(	'parameter' 
)
{ after(grammarAccess.getAnnotationTargetSpecAccess().getParameterEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_0()); }
(rule__Module__Group_0__0)?
{ after(grammarAccess.getModuleAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_1()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_2()); }
(rule__Module__NameAssignment_2)
{ after(grammarAccess.getModuleAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_4()); }
(rule__Module__Group_4__0)*
{ after(grammarAccess.getModuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__5__Impl
	rule__Module__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_5()); }
(rule__Module__Group_5__0)*
{ after(grammarAccess.getModuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__6__Impl
	rule__Module__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_6()); }
(rule__Module__Group_6__0)*
{ after(grammarAccess.getModuleAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getRuleDeclarationsAssignment_7()); }
(rule__Module__RuleDeclarationsAssignment_7)*
{ after(grammarAccess.getModuleAccess().getRuleDeclarationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Module__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_0__0__Impl
	rule__Module__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getPackageKeyword_0_0()); }

	'package' 

{ after(grammarAccess.getModuleAccess().getPackageKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_0__1__Impl
	rule__Module__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getPackageNameAssignment_0_1()); }
(rule__Module__PackageNameAssignment_0_1)
{ after(grammarAccess.getModuleAccess().getPackageNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_0_2()); }
(
	';' 
)?
{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Module__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_4__0__Impl
	rule__Module__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getImportKeyword_4_0()); }

	'import' 

{ after(grammarAccess.getModuleAccess().getImportKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_4__1__Impl
	rule__Module__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getImportsAssignment_4_1()); }
(rule__Module__ImportsAssignment_4_1)
{ after(grammarAccess.getModuleAccess().getImportsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_4_2()); }

	';' 

{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Module__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_5__0__Impl
	rule__Module__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getMetamodelDeclarationsAssignment_5_0()); }
(rule__Module__MetamodelDeclarationsAssignment_5_0)
{ after(grammarAccess.getModuleAccess().getMetamodelDeclarationsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_6__0__Impl
	rule__Module__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAnnotationDefinitionsAssignment_6_0()); }
(rule__Module__AnnotationDefinitionsAssignment_6_0)
{ after(grammarAccess.getModuleAccess().getAnnotationDefinitionsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_6_1()); }

	';' 

{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetamodelDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group__0__Impl
	rule__MetamodelDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getMetamodelKeyword_0()); }

	'metamodel' 

{ after(grammarAccess.getMetamodelDeclarationAccess().getMetamodelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group__1__Impl
	rule__MetamodelDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getTypeAssignment_1()); }
(rule__MetamodelDeclaration__TypeAssignment_1)
{ after(grammarAccess.getMetamodelDeclarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group__2__Impl
	rule__MetamodelDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getNameAssignment_2()); }
(rule__MetamodelDeclaration__NameAssignment_2)
{ after(grammarAccess.getMetamodelDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group__3__Impl
	rule__MetamodelDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getGroup_3()); }
(rule__MetamodelDeclaration__Group_3__0)?
{ after(grammarAccess.getMetamodelDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getGroup_4()); }
(rule__MetamodelDeclaration__Group_4__0)?
{ after(grammarAccess.getMetamodelDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MetamodelDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_3__0__Impl
	rule__MetamodelDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getMetamodelDeclarationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_3__1__Impl
	rule__MetamodelDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getGroup_3_1()); }
(rule__MetamodelDeclaration__Group_3_1__0)?
{ after(grammarAccess.getMetamodelDeclarationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getMetamodelDeclarationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MetamodelDeclaration__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_3_1__0__Impl
	rule__MetamodelDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getPropertiesAssignment_3_1_0()); }
(rule__MetamodelDeclaration__PropertiesAssignment_3_1_0)
{ after(grammarAccess.getMetamodelDeclarationAccess().getPropertiesAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getGroup_3_1_1()); }
(rule__MetamodelDeclaration__Group_3_1_1__0)*
{ after(grammarAccess.getMetamodelDeclarationAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetamodelDeclaration__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_3_1_1__0__Impl
	rule__MetamodelDeclaration__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getCommaKeyword_3_1_1_0()); }

	',' 

{ after(grammarAccess.getMetamodelDeclarationAccess().getCommaKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getPropertiesAssignment_3_1_1_1()); }
(rule__MetamodelDeclaration__PropertiesAssignment_3_1_1_1)
{ after(grammarAccess.getMetamodelDeclarationAccess().getPropertiesAssignment_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetamodelDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_4__0__Impl
	rule__MetamodelDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getReplacesKeyword_4_0()); }

	'replaces' 

{ after(grammarAccess.getMetamodelDeclarationAccess().getReplacesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getGroup_4_1()); }
(rule__MetamodelDeclaration__Group_4_1__0)
{ after(grammarAccess.getMetamodelDeclarationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetamodelDeclaration__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_4_1__0__Impl
	rule__MetamodelDeclaration__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getReplacesAssignment_4_1_0()); }
(rule__MetamodelDeclaration__ReplacesAssignment_4_1_0)
{ after(grammarAccess.getMetamodelDeclarationAccess().getReplacesAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getGroup_4_1_1()); }
(rule__MetamodelDeclaration__Group_4_1_1__0)*
{ after(grammarAccess.getMetamodelDeclarationAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetamodelDeclaration__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_4_1_1__0__Impl
	rule__MetamodelDeclaration__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getCommaKeyword_4_1_1_0()); }

	',' 

{ after(grammarAccess.getMetamodelDeclarationAccess().getCommaKeyword_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelDeclaration__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelDeclaration__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getReplacesAssignment_4_1_1_1()); }
(rule__MetamodelDeclaration__ReplacesAssignment_4_1_1_1)
{ after(grammarAccess.getMetamodelDeclarationAccess().getReplacesAssignment_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
(rule__Property__NameAssignment_0)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getPropertyAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getValueAssignment_2()); }
(rule__Property__ValueAssignment_2)
{ after(grammarAccess.getPropertyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RuleDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__0__Impl
	rule__RuleDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getAnnotationsAssignment_0()); }
(rule__RuleDeclaration__AnnotationsAssignment_0)*
{ after(grammarAccess.getRuleDeclarationAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__1__Impl
	rule__RuleDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getVisibilityAssignment_1()); }
(rule__RuleDeclaration__VisibilityAssignment_1)?
{ after(grammarAccess.getRuleDeclarationAccess().getVisibilityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__2__Impl
	rule__RuleDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getExecAssignment_2()); }
(rule__RuleDeclaration__ExecAssignment_2)
{ after(grammarAccess.getRuleDeclarationAccess().getExecAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__3__Impl
	rule__RuleDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getAlternatives_3()); }
(rule__RuleDeclaration__Alternatives_3)?
{ after(grammarAccess.getRuleDeclarationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__4__Impl
	rule__RuleDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getVirtualAssignment_4()); }
(rule__RuleDeclaration__VirtualAssignment_4)?
{ after(grammarAccess.getRuleDeclarationAccess().getVirtualAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__5__Impl
	rule__RuleDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getMultiAssignment_5()); }
(rule__RuleDeclaration__MultiAssignment_5)?
{ after(grammarAccess.getRuleDeclarationAccess().getMultiAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__6__Impl
	rule__RuleDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getNameAssignment_6()); }
(rule__RuleDeclaration__NameAssignment_6)
{ after(grammarAccess.getRuleDeclarationAccess().getNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__7__Impl
	rule__RuleDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getRuleDeclarationAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__8__Impl
	rule__RuleDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_8()); }
(rule__RuleDeclaration__Group_8__0)?
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__9__Impl
	rule__RuleDeclaration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getRuleDeclarationAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__10__Impl
	rule__RuleDeclaration__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_10()); }
(rule__RuleDeclaration__Group_10__0)?
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__11__Impl
	rule__RuleDeclaration__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_11()); }
(rule__RuleDeclaration__Group_11__0)?
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__12__Impl
	rule__RuleDeclaration__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_12()); }
(rule__RuleDeclaration__Group_12__0)?
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__13__Impl
	rule__RuleDeclaration__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_13()); }
(rule__RuleDeclaration__Group_13__0)?
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__14__Impl
	rule__RuleDeclaration__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getTriggerAssignment_14()); }
(rule__RuleDeclaration__TriggerAssignment_14)?
{ after(grammarAccess.getRuleDeclarationAccess().getTriggerAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getAlternatives_15()); }
(rule__RuleDeclaration__Alternatives_15)
{ after(grammarAccess.getRuleDeclarationAccess().getAlternatives_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__RuleDeclaration__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_8__0__Impl
	rule__RuleDeclaration__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getFormalParametersAssignment_8_0()); }
(rule__RuleDeclaration__FormalParametersAssignment_8_0)
{ after(grammarAccess.getRuleDeclarationAccess().getFormalParametersAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_8_1()); }
(rule__RuleDeclaration__Group_8_1__0)*
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDeclaration__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_8_1__0__Impl
	rule__RuleDeclaration__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getCommaKeyword_8_1_0()); }

	',' 

{ after(grammarAccess.getRuleDeclarationAccess().getCommaKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getFormalParametersAssignment_8_1_1()); }
(rule__RuleDeclaration__FormalParametersAssignment_8_1_1)
{ after(grammarAccess.getRuleDeclarationAccess().getFormalParametersAssignment_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDeclaration__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_10__0__Impl
	rule__RuleDeclaration__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getColonKeyword_10_0()); }

	':' 

{ after(grammarAccess.getRuleDeclarationAccess().getColonKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_10__1__Impl
	rule__RuleDeclaration__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getLeftParenthesisKeyword_10_1()); }

	'(' 

{ after(grammarAccess.getRuleDeclarationAccess().getLeftParenthesisKeyword_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_10__2__Impl
	rule__RuleDeclaration__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getReturnParametersAssignment_10_2()); }
(rule__RuleDeclaration__ReturnParametersAssignment_10_2)
{ after(grammarAccess.getRuleDeclarationAccess().getReturnParametersAssignment_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_10__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_10__3__Impl
	rule__RuleDeclaration__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_10__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_10_3()); }
(rule__RuleDeclaration__Group_10_3__0)*
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_10_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_10__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_10__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getRightParenthesisKeyword_10_4()); }

	')' 

{ after(grammarAccess.getRuleDeclarationAccess().getRightParenthesisKeyword_10_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RuleDeclaration__Group_10_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_10_3__0__Impl
	rule__RuleDeclaration__Group_10_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_10_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getCommaKeyword_10_3_0()); }

	',' 

{ after(grammarAccess.getRuleDeclarationAccess().getCommaKeyword_10_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_10_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_10_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_10_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getReturnParametersAssignment_10_3_1()); }
(rule__RuleDeclaration__ReturnParametersAssignment_10_3_1)
{ after(grammarAccess.getRuleDeclarationAccess().getReturnParametersAssignment_10_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDeclaration__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_11__0__Impl
	rule__RuleDeclaration__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getImplementsKeyword_11_0()); }

	'implements' 

{ after(grammarAccess.getRuleDeclarationAccess().getImplementsKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_11__1__Impl
	rule__RuleDeclaration__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getImplementedRulesAssignment_11_1()); }
(rule__RuleDeclaration__ImplementedRulesAssignment_11_1)
{ after(grammarAccess.getRuleDeclarationAccess().getImplementedRulesAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_11_2()); }
(rule__RuleDeclaration__Group_11_2__0)*
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RuleDeclaration__Group_11_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_11_2__0__Impl
	rule__RuleDeclaration__Group_11_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_11_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getCommaKeyword_11_2_0()); }

	',' 

{ after(grammarAccess.getRuleDeclarationAccess().getCommaKeyword_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_11_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_11_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_11_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getImplementedRulesAssignment_11_2_1()); }
(rule__RuleDeclaration__ImplementedRulesAssignment_11_2_1)
{ after(grammarAccess.getRuleDeclarationAccess().getImplementedRulesAssignment_11_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDeclaration__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_12__0__Impl
	rule__RuleDeclaration__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getOverridesKeyword_12_0()); }

	'overrides' 

{ after(grammarAccess.getRuleDeclarationAccess().getOverridesKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getOverriddenRuleAssignment_12_1()); }
(rule__RuleDeclaration__OverriddenRuleAssignment_12_1)
{ after(grammarAccess.getRuleDeclarationAccess().getOverriddenRuleAssignment_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDeclaration__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_13__0__Impl
	rule__RuleDeclaration__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getExcludedByKeyword_13_0()); }

	'excludedBy' 

{ after(grammarAccess.getRuleDeclarationAccess().getExcludedByKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_13__1__Impl
	rule__RuleDeclaration__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getExcludingRulesAssignment_13_1()); }
(rule__RuleDeclaration__ExcludingRulesAssignment_13_1)
{ after(grammarAccess.getRuleDeclarationAccess().getExcludingRulesAssignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getGroup_13_2()); }
(rule__RuleDeclaration__Group_13_2__0)*
{ after(grammarAccess.getRuleDeclarationAccess().getGroup_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RuleDeclaration__Group_13_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_13_2__0__Impl
	rule__RuleDeclaration__Group_13_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_13_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getCommaKeyword_13_2_0()); }

	',' 

{ after(grammarAccess.getRuleDeclarationAccess().getCommaKeyword_13_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_13_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_13_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_13_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getExcludingRulesAssignment_13_2_1()); }
(rule__RuleDeclaration__ExcludingRulesAssignment_13_2_1)
{ after(grammarAccess.getRuleDeclarationAccess().getExcludingRulesAssignment_13_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleDeclaration__Group_15_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_15_1__0__Impl
	rule__RuleDeclaration__Group_15_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_15_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getJavaSpecAssignment_15_1_0()); }
(rule__RuleDeclaration__JavaSpecAssignment_15_1_0)
{ after(grammarAccess.getRuleDeclarationAccess().getJavaSpecAssignment_15_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDeclaration__Group_15_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleDeclaration__Group_15_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Group_15_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getSemicolonKeyword_15_1_1()); }

	';' 

{ after(grammarAccess.getRuleDeclarationAccess().getSemicolonKeyword_15_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleRuleReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group__0__Impl
	rule__SimpleRuleReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getRuleDeclarationAssignment_0()); }
(rule__SimpleRuleReference__RuleDeclarationAssignment_0)
{ after(grammarAccess.getSimpleRuleReferenceAccess().getRuleDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group__1__Impl
	rule__SimpleRuleReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSimpleRuleReferenceAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group__2__Impl
	rule__SimpleRuleReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesAssignment_2()); }
(rule__SimpleRuleReference__ParameterReferencesAssignment_2)
{ after(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group__3__Impl
	rule__SimpleRuleReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getGroup_3()); }
(rule__SimpleRuleReference__Group_3__0)*
{ after(grammarAccess.getSimpleRuleReferenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group__4__Impl
	rule__SimpleRuleReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getSimpleRuleReferenceAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getGroup_5()); }
(rule__SimpleRuleReference__Group_5__0)?
{ after(grammarAccess.getSimpleRuleReferenceAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SimpleRuleReference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_3__0__Impl
	rule__SimpleRuleReference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getSimpleRuleReferenceAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesAssignment_3_1()); }
(rule__SimpleRuleReference__ParameterReferencesAssignment_3_1)
{ after(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleRuleReference__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_5__0__Impl
	rule__SimpleRuleReference__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getColonKeyword_5_0()); }

	':' 

{ after(grammarAccess.getSimpleRuleReferenceAccess().getColonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_5__1__Impl
	rule__SimpleRuleReference__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getLeftParenthesisKeyword_5_1()); }

	'(' 

{ after(grammarAccess.getSimpleRuleReferenceAccess().getLeftParenthesisKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_5__2__Impl
	rule__SimpleRuleReference__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesAssignment_5_2()); }
(rule__SimpleRuleReference__ReturnReferencesAssignment_5_2)
{ after(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_5__3__Impl
	rule__SimpleRuleReference__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getGroup_5_3()); }
(rule__SimpleRuleReference__Group_5_3__0)*
{ after(grammarAccess.getSimpleRuleReferenceAccess().getGroup_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getRightParenthesisKeyword_5_4()); }

	')' 

{ after(grammarAccess.getSimpleRuleReferenceAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SimpleRuleReference__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_5_3__0__Impl
	rule__SimpleRuleReference__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getCommaKeyword_5_3_0()); }

	',' 

{ after(grammarAccess.getSimpleRuleReferenceAccess().getCommaKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleRuleReference__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleRuleReference__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesAssignment_5_3_1()); }
(rule__SimpleRuleReference__ReturnReferencesAssignment_5_3_1)
{ after(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesAssignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedRuleReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group__0__Impl
	rule__QualifiedRuleReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getRuleDeclarationAssignment_0()); }
(rule__QualifiedRuleReference__RuleDeclarationAssignment_0)
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getRuleDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group__1__Impl
	rule__QualifiedRuleReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getQualifiedRuleReferenceAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group__2__Impl
	rule__QualifiedRuleReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesAssignment_2()); }
(rule__QualifiedRuleReference__ParameterReferencesAssignment_2)
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group__3__Impl
	rule__QualifiedRuleReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_3()); }
(rule__QualifiedRuleReference__Group_3__0)*
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group__4__Impl
	rule__QualifiedRuleReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getQualifiedRuleReferenceAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_5()); }
(rule__QualifiedRuleReference__Group_5__0)?
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__QualifiedRuleReference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_3__0__Impl
	rule__QualifiedRuleReference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getQualifiedRuleReferenceAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesAssignment_3_1()); }
(rule__QualifiedRuleReference__ParameterReferencesAssignment_3_1)
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedRuleReference__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_5__0__Impl
	rule__QualifiedRuleReference__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getColonKeyword_5_0()); }

	':' 

{ after(grammarAccess.getQualifiedRuleReferenceAccess().getColonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_5__1__Impl
	rule__QualifiedRuleReference__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getLeftParenthesisKeyword_5_1()); }

	'(' 

{ after(grammarAccess.getQualifiedRuleReferenceAccess().getLeftParenthesisKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_5__2__Impl
	rule__QualifiedRuleReference__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesAssignment_5_2()); }
(rule__QualifiedRuleReference__ReturnReferencesAssignment_5_2)
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_5__3__Impl
	rule__QualifiedRuleReference__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_5_3()); }
(rule__QualifiedRuleReference__Group_5_3__0)*
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getRightParenthesisKeyword_5_4()); }

	')' 

{ after(grammarAccess.getQualifiedRuleReferenceAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedRuleReference__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_5_3__0__Impl
	rule__QualifiedRuleReference__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getCommaKeyword_5_3_0()); }

	',' 

{ after(grammarAccess.getQualifiedRuleReferenceAccess().getCommaKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedRuleReference__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedRuleReference__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesAssignment_5_3_1()); }
(rule__QualifiedRuleReference__ReturnReferencesAssignment_5_3_1)
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesAssignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleParameterReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleParameterReference__Group__0__Impl
	rule__SimpleParameterReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleParameterReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleParameterReferenceAccess().getTypeAssignment_0()); }
(rule__SimpleParameterReference__TypeAssignment_0)
{ after(grammarAccess.getSimpleParameterReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleParameterReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleParameterReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleParameterReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleParameterReferenceAccess().getNameAssignment_1()); }
(rule__SimpleParameterReference__NameAssignment_1)?
{ after(grammarAccess.getSimpleParameterReferenceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trigger__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTriggerKeyword_0()); }

	'trigger' 

{ after(grammarAccess.getTriggerAccess().getTriggerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__1__Impl
	rule__Trigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__2__Impl
	rule__Trigger__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTriggerRulesAssignment_2()); }
(rule__Trigger__TriggerRulesAssignment_2)
{ after(grammarAccess.getTriggerAccess().getTriggerRulesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__3__Impl
	rule__Trigger__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getGroup_3()); }
(rule__Trigger__Group_3__0)*
{ after(grammarAccess.getTriggerAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__4__Impl
	rule__Trigger__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getTriggerAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__5__Impl
	rule__Trigger__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getGroup_5()); }
(rule__Trigger__Group_5__0)?
{ after(grammarAccess.getTriggerAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getGroup_6()); }
(rule__Trigger__Group_6__0)?
{ after(grammarAccess.getTriggerAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Trigger__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_3__0__Impl
	rule__Trigger__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getTriggerAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTriggerRulesAssignment_3_1()); }
(rule__Trigger__TriggerRulesAssignment_3_1)
{ after(grammarAccess.getTriggerAccess().getTriggerRulesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trigger__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_5__0__Impl
	rule__Trigger__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getWithKeyword_5_0()); }

	'with' 

{ after(grammarAccess.getTriggerAccess().getWithKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getWithAssignment_5_1()); }
(rule__Trigger__WithAssignment_5_1)
{ after(grammarAccess.getTriggerAccess().getWithAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trigger__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_6__0__Impl
	rule__Trigger__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getWhenKeyword_6_0()); }

	'when' 

{ after(grammarAccess.getTriggerAccess().getWhenKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_6__1__Impl
	rule__Trigger__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_6_1()); }

	'(' 

{ after(grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_6__2__Impl
	rule__Trigger__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getWhenAssignment_6_2()); }
(rule__Trigger__WhenAssignment_6_2)
{ after(grammarAccess.getTriggerAccess().getWhenAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getRightParenthesisKeyword_6_3()); }

	')' 

{ after(grammarAccess.getTriggerAccess().getRightParenthesisKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JavaSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaSpec__Group__0__Impl
	rule__JavaSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getJavaKeyword_0()); }

	'java' 

{ after(grammarAccess.getJavaSpecAccess().getJavaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaSpec__Group__1__Impl
	rule__JavaSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getJavaSpecAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaSpec__Group__2__Impl
	rule__JavaSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getPropertiesAssignment_2()); }
(rule__JavaSpec__PropertiesAssignment_2)
{ after(grammarAccess.getJavaSpecAccess().getPropertiesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaSpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaSpec__Group__3__Impl
	rule__JavaSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getGroup_3()); }
(rule__JavaSpec__Group_3__0)*
{ after(grammarAccess.getJavaSpecAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaSpec__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaSpec__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getJavaSpecAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JavaSpec__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaSpec__Group_3__0__Impl
	rule__JavaSpec__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getJavaSpecAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaSpec__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaSpec__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getPropertiesAssignment_3_1()); }
(rule__JavaSpec__PropertiesAssignment_3_1)
{ after(grammarAccess.getJavaSpecAccess().getPropertiesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__0__Impl
	rule__FormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getAnnotationsAssignment_0()); }
(rule__FormalParameter__AnnotationsAssignment_0)*
{ after(grammarAccess.getFormalParameterAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__1__Impl
	rule__FormalParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getModifierAssignment_1()); }
(rule__FormalParameter__ModifierAssignment_1)?
{ after(grammarAccess.getFormalParameterAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getVardeclAssignment_2()); }
(rule__FormalParameter__VardeclAssignment_2)
{ after(grammarAccess.getFormalParameterAccess().getVardeclAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnParameter__Group__0__Impl
	rule__ReturnParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterAccess().getAnnotationsAssignment_0()); }
(rule__ReturnParameter__AnnotationsAssignment_0)*
{ after(grammarAccess.getReturnParameterAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnParameter__Group__1__Impl
	rule__ReturnParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterAccess().getModifierAssignment_1()); }
(rule__ReturnParameter__ModifierAssignment_1)?
{ after(grammarAccess.getReturnParameterAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterAccess().getVardeclAssignment_2()); }
(rule__ReturnParameter__VardeclAssignment_2)
{ after(grammarAccess.getReturnParameterAccess().getVardeclAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReferenceType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceType__Group__0__Impl
	rule__ReferenceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getMetamodelDeclarationAssignment_0()); }
(rule__ReferenceType__MetamodelDeclarationAssignment_0)
{ after(grammarAccess.getReferenceTypeAccess().getMetamodelDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceType__Group__1__Impl
	rule__ReferenceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getColonColonKeyword_1()); }

	'::' 

{ after(grammarAccess.getReferenceTypeAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getEClassifierAssignment_2()); }
(rule__ReferenceType__EClassifierAssignment_2)
{ after(grammarAccess.getReferenceTypeAccess().getEClassifierAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CollectionType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__0__Impl
	rule__CollectionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getCollectionTypeAssignment_0()); }
(rule__CollectionType__CollectionTypeAssignment_0)
{ after(grammarAccess.getCollectionTypeAccess().getCollectionTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getGroup_1()); }
(rule__CollectionType__Group_1__0)?
{ after(grammarAccess.getCollectionTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group_1__0__Impl
	rule__CollectionType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getCollectionTypeAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group_1__1__Impl
	rule__CollectionType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getTypeParAssignment_1_1()); }
(rule__CollectionType__TypeParAssignment_1_1)
{ after(grammarAccess.getCollectionTypeAccess().getTypeParAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getCollectionTypeAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
(rule__Block__StatementsAssignment_2)*
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LocalVariableDeclarationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclarationStatement__Group__0__Impl
	rule__LocalVariableDeclarationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclarationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationStatementAccess().getLocalVariableDeclarationAssignment_0()); }
(rule__LocalVariableDeclarationStatement__LocalVariableDeclarationAssignment_0)
{ after(grammarAccess.getLocalVariableDeclarationStatementAccess().getLocalVariableDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclarationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclarationStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclarationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getLocalVariableDeclarationStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__0__Impl
	rule__LocalVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getVardeclAssignment_0()); }
(rule__LocalVariableDeclaration__VardeclAssignment_0)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getVardeclAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup_1()); }
(rule__LocalVariableDeclaration__Group_1__0)?
{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVariableDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group_1__0__Impl
	rule__LocalVariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getLocalVariableDeclarationAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getExpressionAssignment_1_1()); }
(rule__LocalVariableDeclaration__ExpressionAssignment_1_1)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedVarDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedVarDeclaration__Group__0__Impl
	rule__TypedVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVarDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedVarDeclarationAccess().getTypeAssignment_0()); }
(rule__TypedVarDeclaration__TypeAssignment_0)
{ after(grammarAccess.getTypedVarDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedVarDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedVarDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVarDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedVarDeclarationAccess().getNameAssignment_1()); }
(rule__TypedVarDeclaration__NameAssignment_1)
{ after(grammarAccess.getTypedVarDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InferredVarDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InferredVarDeclaration__Group__0__Impl
	rule__InferredVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InferredVarDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInferredVarDeclarationAccess().getTypeAssignment_0()); }
(rule__InferredVarDeclaration__TypeAssignment_0)?
{ after(grammarAccess.getInferredVarDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InferredVarDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InferredVarDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InferredVarDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInferredVarDeclarationAccess().getNameAssignment_1()); }
(rule__InferredVarDeclaration__NameAssignment_1)
{ after(grammarAccess.getInferredVarDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__0__Impl
	rule__ExpressionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getStatementExpressionAssignment_0()); }
(rule__ExpressionStatement__StatementExpressionAssignment_0)
{ after(grammarAccess.getExpressionStatementAccess().getStatementExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4__0__Impl
	rule__StatementExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getVariableAccessParserRuleCall_4_0()); }
	ruleVariableAccess
{ after(grammarAccess.getStatementExpressionAccess().getVariableAccessParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getAlternatives_4_1()); }
(rule__StatementExpression__Alternatives_4_1)?
{ after(grammarAccess.getStatementExpressionAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementExpression__Group_4_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_0__0__Impl
	rule__StatementExpression__Group_4_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getAssignmentLhsAction_4_1_0_0()); }
(

)
{ after(grammarAccess.getStatementExpressionAccess().getAssignmentLhsAction_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_4_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_0__1__Impl
	rule__StatementExpression__Group_4_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getOperatorAssignment_4_1_0_1()); }
(rule__StatementExpression__OperatorAssignment_4_1_0_1)
{ after(grammarAccess.getStatementExpressionAccess().getOperatorAssignment_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_4_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getExpressionAssignment_4_1_0_2()); }
(rule__StatementExpression__ExpressionAssignment_4_1_0_2)
{ after(grammarAccess.getStatementExpressionAccess().getExpressionAssignment_4_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatementExpression__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_1__0__Impl
	rule__StatementExpression__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getAssignmentLhsAction_4_1_1_0()); }
(

)
{ after(grammarAccess.getStatementExpressionAccess().getAssignmentLhsAction_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_1__1__Impl
	rule__StatementExpression__Group_4_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_4_1_1_1()); }
(rule__StatementExpression__Group_4_1_1_1__0)
{ after(grammarAccess.getStatementExpressionAccess().getGroup_4_1_1_1()); }
)
(
{ before(grammarAccess.getStatementExpressionAccess().getGroup_4_1_1_1()); }
(rule__StatementExpression__Group_4_1_1_1__0)*
{ after(grammarAccess.getStatementExpressionAccess().getGroup_4_1_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_4_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_1__2__Impl
	rule__StatementExpression__Group_4_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getOperatorAssignment_4_1_1_2()); }
(rule__StatementExpression__OperatorAssignment_4_1_1_2)
{ after(grammarAccess.getStatementExpressionAccess().getOperatorAssignment_4_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_4_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getExpressionAssignment_4_1_1_3()); }
(rule__StatementExpression__ExpressionAssignment_4_1_1_3)
{ after(grammarAccess.getStatementExpressionAccess().getExpressionAssignment_4_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StatementExpression__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_1_1__0__Impl
	rule__StatementExpression__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getCommaKeyword_4_1_1_1_0()); }

	',' 

{ after(grammarAccess.getStatementExpressionAccess().getCommaKeyword_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementExpression__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementExpression__Group_4_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getLhsAssignment_4_1_1_1_1()); }
(rule__StatementExpression__LhsAssignment_4_1_1_1_1)
{ after(grammarAccess.getStatementExpressionAccess().getLhsAssignment_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmptyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyStatement__Group__0__Impl
	rule__EmptyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0()); }
(

)
{ after(grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
(

)
{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
	rule__ReturnStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
(rule__ReturnStatement__ExpressionAssignment_2)?
{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionAssignment_2()); }
(rule__IfStatement__ExpressionAssignment_2)
{ after(grammarAccess.getIfStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getTrueStatementAssignment_4()); }
(rule__IfStatement__TrueStatementAssignment_4)
{ after(grammarAccess.getIfStatementAccess().getTrueStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
(rule__IfStatement__Group_5__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1()); }
(rule__IfStatement__ElseStatementAssignment_5_1)
{ after(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getExpressionAssignment_2()); }
(rule__WhileStatement__ExpressionAssignment_2)
{ after(grammarAccess.getWhileStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getStatementAssignment_4()); }
(rule__WhileStatement__StatementAssignment_4)
{ after(grammarAccess.getWhileStatementAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DoStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__0__Impl
	rule__DoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__1__Impl
	rule__DoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getStatementAssignment_1()); }
(rule__DoStatement__StatementAssignment_1)
{ after(grammarAccess.getDoStatementAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__2__Impl
	rule__DoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__3__Impl
	rule__DoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__4__Impl
	rule__DoStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getExpressionAssignment_4()); }
(rule__DoStatement__ExpressionAssignment_4)
{ after(grammarAccess.getDoStatementAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__5__Impl
	rule__DoStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ForInit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group__0__Impl
	rule__ForInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getForInitAction_0()); }
(

)
{ after(grammarAccess.getForInitAccess().getForInitAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForInit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getAlternatives_1()); }
(rule__ForInit__Alternatives_1)?
{ after(grammarAccess.getForInitAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForInit__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group_1_1__0__Impl
	rule__ForInit__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getVarDeclarationsAssignment_1_1_0()); }
(rule__ForInit__VarDeclarationsAssignment_1_1_0)
{ after(grammarAccess.getForInitAccess().getVarDeclarationsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForInit__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getAlternatives_1_1_1()); }
(rule__ForInit__Alternatives_1_1_1)*
{ after(grammarAccess.getForInitAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForInit__Group_1_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group_1_1_1_0__0__Impl
	rule__ForInit__Group_1_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_1_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getCommaKeyword_1_1_1_0_0()); }

	',' 

{ after(grammarAccess.getForInitAccess().getCommaKeyword_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForInit__Group_1_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForInit__Group_1_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_1_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getStatementExpressionsAssignment_1_1_1_0_1()); }
(rule__ForInit__StatementExpressionsAssignment_1_1_1_0_1)
{ after(grammarAccess.getForInitAccess().getStatementExpressionsAssignment_1_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForUpdate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForUpdate__Group__0__Impl
	rule__ForUpdate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForUpdateAccess().getStatementExpressionAssignment_0()); }
(rule__ForUpdate__StatementExpressionAssignment_0)
{ after(grammarAccess.getForUpdateAccess().getStatementExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForUpdate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForUpdate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForUpdateAccess().getGroup_1()); }
(rule__ForUpdate__Group_1__0)*
{ after(grammarAccess.getForUpdateAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForUpdate__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForUpdate__Group_1__0__Impl
	rule__ForUpdate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForUpdateAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getForUpdateAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForUpdate__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForUpdate__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForUpdateAccess().getStatementExpressionAssignment_1_1()); }
(rule__ForUpdate__StatementExpressionAssignment_1_1)
{ after(grammarAccess.getForUpdateAccess().getStatementExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getAlternatives_2()); }
(rule__ForStatement__Alternatives_2)
{ after(grammarAccess.getForStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getStatementAssignment_4()); }
(rule__ForStatement__StatementAssignment_4)
{ after(grammarAccess.getForStatementAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ForStatement__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_0__0__Impl
	rule__ForStatement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLoopVariableAssignment_2_0_0()); }
(rule__ForStatement__LoopVariableAssignment_2_0_0)
{ after(grammarAccess.getForStatementAccess().getLoopVariableAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_0__1__Impl
	rule__ForStatement__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getColonKeyword_2_0_1()); }

	':' 

{ after(grammarAccess.getForStatementAccess().getColonKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getExpressionAssignment_2_0_2()); }
(rule__ForStatement__ExpressionAssignment_2_0_2)
{ after(grammarAccess.getForStatementAccess().getExpressionAssignment_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_1__0__Impl
	rule__ForStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForInitAssignment_2_1_0()); }
(rule__ForStatement__ForInitAssignment_2_1_0)?
{ after(grammarAccess.getForStatementAccess().getForInitAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_1__1__Impl
	rule__ForStatement__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_2_1_1()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_1__2__Impl
	rule__ForStatement__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getExpressionAssignment_2_1_2()); }
(rule__ForStatement__ExpressionAssignment_2_1_2)?
{ after(grammarAccess.getForStatementAccess().getExpressionAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_1__3__Impl
	rule__ForStatement__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_2_1_3()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForUpdateAssignment_2_1_4()); }
(rule__ForStatement__ForUpdateAssignment_2_1_4)?
{ after(grammarAccess.getForStatementAccess().getForUpdateAssignment_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BreakStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__0__Impl
	rule__BreakStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0()); }
(

)
{ after(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__1__Impl
	rule__BreakStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakKeyword_1()); }

	'break' 

{ after(grammarAccess.getBreakStatementAccess().getBreakKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ThrowStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowStatement__Group__0__Impl
	rule__ThrowStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStatementAccess().getThrowKeyword_0()); }

	'throw' 

{ after(grammarAccess.getThrowStatementAccess().getThrowKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowStatement__Group__1__Impl
	rule__ThrowStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStatementAccess().getExpressionAssignment_1()); }
(rule__ThrowStatement__ExpressionAssignment_1)
{ after(grammarAccess.getThrowStatementAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getThrowStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TryStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__0__Impl
	rule__TryStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTryKeyword_0()); }

	'try' 

{ after(grammarAccess.getTryStatementAccess().getTryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__1__Impl
	rule__TryStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTryBlockAssignment_1()); }
(rule__TryStatement__TryBlockAssignment_1)
{ after(grammarAccess.getTryStatementAccess().getTryBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__2__Impl
	rule__TryStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getCatchesAssignment_2()); }
(rule__TryStatement__CatchesAssignment_2)*
{ after(grammarAccess.getTryStatementAccess().getCatchesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getGroup_3()); }
(rule__TryStatement__Group_3__0)?
{ after(grammarAccess.getTryStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TryStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_3__0__Impl
	rule__TryStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyKeyword_3_0()); }

	'finally' 

{ after(grammarAccess.getTryStatementAccess().getFinallyKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyBlockAssignment_3_1()); }
(rule__TryStatement__FinallyBlockAssignment_3_1)
{ after(grammarAccess.getTryStatementAccess().getFinallyBlockAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Catch__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Catch__Group__0__Impl
	rule__Catch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchAccess().getCatchKeyword_0()); }

	'catch' 

{ after(grammarAccess.getCatchAccess().getCatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Catch__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Catch__Group__1__Impl
	rule__Catch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCatchAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Catch__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Catch__Group__2__Impl
	rule__Catch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchAccess().getFormalParameterAssignment_2()); }
(rule__Catch__FormalParameterAssignment_2)
{ after(grammarAccess.getCatchAccess().getFormalParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Catch__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Catch__Group__3__Impl
	rule__Catch__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getCatchAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Catch__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Catch__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchAccess().getBlockAssignment_4()); }
(rule__Catch__BlockAssignment_4)
{ after(grammarAccess.getCatchAccess().getBlockAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression_10__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_10__Group_0__0__Impl
	rule__Expression_10__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_10__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_10Access().getIteratorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getExpression_10Access().getIteratorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_10__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_10__Group_0__1__Impl
	rule__Expression_10__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_10__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_10Access().getVariableAssignment_0_1()); }
(rule__Expression_10__VariableAssignment_0_1)
{ after(grammarAccess.getExpression_10Access().getVariableAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_10__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_10__Group_0__2__Impl
	rule__Expression_10__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_10__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_10Access().getVerticalLineKeyword_0_2()); }

	'|' 

{ after(grammarAccess.getExpression_10Access().getVerticalLineKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_10__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_10__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_10__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_10Access().getExpressionAssignment_0_3()); }
(rule__Expression_10__ExpressionAssignment_0_3)
{ after(grammarAccess.getExpression_10Access().getExpressionAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression_1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_1__Group__0__Impl
	rule__Expression_1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_1Access().getExpression_2ParserRuleCall_0()); }
	ruleExpression_2
{ after(grammarAccess.getExpression_1Access().getExpression_2ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_1Access().getGroup_1()); }
(rule__Expression_1__Group_1__0)*
{ after(grammarAccess.getExpression_1Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_1__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_1__Group_1__0__Impl
	rule__Expression_1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_1__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_1Access().getBooleanExpressionLhsAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_1Access().getBooleanExpressionLhsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_1__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_1__Group_1__1__Impl
	rule__Expression_1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_1__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_1Access().getOpAssignment_1_1()); }
(rule__Expression_1__OpAssignment_1_1)
{ after(grammarAccess.getExpression_1Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_1__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_1__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_1Access().getRhsAssignment_1_2()); }
(rule__Expression_1__RhsAssignment_1_2)
{ after(grammarAccess.getExpression_1Access().getRhsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_2__Group__0__Impl
	rule__Expression_2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_2Access().getExpression_3ParserRuleCall_0()); }
	ruleExpression_3
{ after(grammarAccess.getExpression_2Access().getExpression_3ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_2Access().getGroup_1()); }
(rule__Expression_2__Group_1__0)*
{ after(grammarAccess.getExpression_2Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_2__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_2__Group_1__0__Impl
	rule__Expression_2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_2__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_2Access().getEqualityExpressionLhsAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_2Access().getEqualityExpressionLhsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_2__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_2__Group_1__1__Impl
	rule__Expression_2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_2__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_2Access().getOpAssignment_1_1()); }
(rule__Expression_2__OpAssignment_1_1)
{ after(grammarAccess.getExpression_2Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_2__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_2__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_2Access().getRhsAssignment_1_2()); }
(rule__Expression_2__RhsAssignment_1_2)
{ after(grammarAccess.getExpression_2Access().getRhsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_3__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_3__Group__0__Impl
	rule__Expression_3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_3__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_3Access().getExpression_5ParserRuleCall_0()); }
	ruleExpression_5
{ after(grammarAccess.getExpression_3Access().getExpression_5ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_3__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_3__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_3Access().getGroup_1()); }
(rule__Expression_3__Group_1__0)*
{ after(grammarAccess.getExpression_3Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_3__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_3__Group_1__0__Impl
	rule__Expression_3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_3__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_3Access().getRelationalExpressionLhsAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_3Access().getRelationalExpressionLhsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_3__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_3__Group_1__1__Impl
	rule__Expression_3__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_3__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_3Access().getOpAssignment_1_1()); }
(rule__Expression_3__OpAssignment_1_1)
{ after(grammarAccess.getExpression_3Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_3__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_3__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_3__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_3Access().getRhsAssignment_1_2()); }
(rule__Expression_3__RhsAssignment_1_2)
{ after(grammarAccess.getExpression_3Access().getRhsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_5__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_5__Group__0__Impl
	rule__Expression_5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_5__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_5Access().getExpression_6ParserRuleCall_0()); }
	ruleExpression_6
{ after(grammarAccess.getExpression_5Access().getExpression_6ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_5__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_5__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_5Access().getGroup_1()); }
(rule__Expression_5__Group_1__0)*
{ after(grammarAccess.getExpression_5Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_5__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_5__Group_1__0__Impl
	rule__Expression_5__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_5__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_5Access().getMathExpressionLhsAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_5Access().getMathExpressionLhsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_5__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_5__Group_1__1__Impl
	rule__Expression_5__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_5__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_5Access().getOpAssignment_1_1()); }
(rule__Expression_5__OpAssignment_1_1)
{ after(grammarAccess.getExpression_5Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_5__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_5__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_5__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_5Access().getRhsAssignment_1_2()); }
(rule__Expression_5__RhsAssignment_1_2)
{ after(grammarAccess.getExpression_5Access().getRhsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_6__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_6__Group_0__0__Impl
	rule__Expression_6__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_6__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_6Access().getUnaryCastExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getExpression_6Access().getUnaryCastExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_6__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_6__Group_0__1__Impl
	rule__Expression_6__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_6__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_6Access().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getExpression_6Access().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_6__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_6__Group_0__2__Impl
	rule__Expression_6__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_6__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_6Access().getTypeAssignment_0_2()); }
(rule__Expression_6__TypeAssignment_0_2)
{ after(grammarAccess.getExpression_6Access().getTypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_6__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_6__Group_0__3__Impl
	rule__Expression_6__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_6__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_6Access().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getExpression_6Access().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_6__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_6__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_6__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_6Access().getExpressionAssignment_0_4()); }
(rule__Expression_6__ExpressionAssignment_0_4)
{ after(grammarAccess.getExpression_6Access().getExpressionAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression_7__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_7__Group_1__0__Impl
	rule__Expression_7__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_7__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_7Access().getUnaryBooleanExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_7Access().getUnaryBooleanExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_7__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_7__Group_1__1__Impl
	rule__Expression_7__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_7__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_7Access().getExclamationMarkKeyword_1_1()); }

	'!' 

{ after(grammarAccess.getExpression_7Access().getExclamationMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_7__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_7__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_7__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_7Access().getExpressionAssignment_1_2()); }
(rule__Expression_7__ExpressionAssignment_1_2)
{ after(grammarAccess.getExpression_7Access().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_8__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_8__Group_1__0__Impl
	rule__Expression_8__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_8__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_8Access().getUnaryMathExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_8Access().getUnaryMathExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_8__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_8__Group_1__1__Impl
	rule__Expression_8__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_8__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_8Access().getOpAssignment_1_1()); }
(rule__Expression_8__OpAssignment_1_1)
{ after(grammarAccess.getExpression_8Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_8__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_8__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_8__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_8Access().getExpressionAssignment_1_2()); }
(rule__Expression_8__ExpressionAssignment_1_2)
{ after(grammarAccess.getExpression_8Access().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_9__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_9__Group__0__Impl
	rule__Expression_9__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_9__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_9Access().getExpression_11ParserRuleCall_0()); }
	ruleExpression_11
{ after(grammarAccess.getExpression_9Access().getExpression_11ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_9__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_9__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_9__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_9Access().getGroup_1()); }
(rule__Expression_9__Group_1__0)?
{ after(grammarAccess.getExpression_9Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_9__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_9__Group_1__0__Impl
	rule__Expression_9__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_9__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_9Access().getInstanceOfExpressionExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_9Access().getInstanceOfExpressionExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_9__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_9__Group_1__1__Impl
	rule__Expression_9__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_9__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_9Access().getInstanceofKeyword_1_1()); }

	'instanceof' 

{ after(grammarAccess.getExpression_9Access().getInstanceofKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_9__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_9__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_9__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_9Access().getTypeAssignment_1_2()); }
(rule__Expression_9__TypeAssignment_1_2)
{ after(grammarAccess.getExpression_9Access().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_11__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_11__Group_0__0__Impl
	rule__Expression_11__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_11__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_11Access().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getExpression_11Access().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_11__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_11__Group_0__1__Impl
	rule__Expression_11__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_11__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_11Access().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getExpression_11Access().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_11__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_11__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_11__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_11Access().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getExpression_11Access().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
(rule__BooleanLiteral__Alternatives_1)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassInstanceCreationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group__0__Impl
	rule__ClassInstanceCreationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group__1__Impl
	rule__ClassInstanceCreationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeAssignment_1()); }
(rule__ClassInstanceCreationExpression__TypeAssignment_1)
{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreationExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group__2__Impl
	rule__ClassInstanceCreationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreationExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group__3__Impl
	rule__ClassInstanceCreationExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup_3()); }
(rule__ClassInstanceCreationExpression__Group_3__0)?
{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreationExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClassInstanceCreationExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group_3__0__Impl
	rule__ClassInstanceCreationExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsAssignment_3_0()); }
(rule__ClassInstanceCreationExpression__ArgumentsAssignment_3_0)
{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreationExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup_3_1()); }
(rule__ClassInstanceCreationExpression__Group_3_1__0)*
{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassInstanceCreationExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group_3_1__0__Impl
	rule__ClassInstanceCreationExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreationExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreationExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsAssignment_3_1_1()); }
(rule__ClassInstanceCreationExpression__ArgumentsAssignment_3_1_1)
{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleInvocation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocation__Group__0__Impl
	rule__RuleInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getRuleDeclarationAssignment_0()); }
(rule__RuleInvocation__RuleDeclarationAssignment_0)
{ after(grammarAccess.getRuleInvocationAccess().getRuleDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleInvocation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocation__Group__1__Impl
	rule__RuleInvocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getRuleInvocationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleInvocation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocation__Group__2__Impl
	rule__RuleInvocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getGroup_2()); }
(rule__RuleInvocation__Group_2__0)?
{ after(grammarAccess.getRuleInvocationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleInvocation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getRuleInvocationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RuleInvocation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocation__Group_2__0__Impl
	rule__RuleInvocation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getArgumentsAssignment_2_0()); }
(rule__RuleInvocation__ArgumentsAssignment_2_0)
{ after(grammarAccess.getRuleInvocationAccess().getArgumentsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleInvocation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getGroup_2_1()); }
(rule__RuleInvocation__Group_2_1__0)*
{ after(grammarAccess.getRuleInvocationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleInvocation__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocation__Group_2_1__0__Impl
	rule__RuleInvocation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getRuleInvocationAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleInvocation__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getArgumentsAssignment_2_1_1()); }
(rule__RuleInvocation__ArgumentsAssignment_2_1_1)
{ after(grammarAccess.getRuleInvocationAccess().getArgumentsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleInvocationSuper__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocationSuper__Group__0__Impl
	rule__RuleInvocationSuper__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocationSuper__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationSuperAccess().getRuleInvocationSuperAction_0()); }
(

)
{ after(grammarAccess.getRuleInvocationSuperAccess().getRuleInvocationSuperAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleInvocationSuper__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleInvocationSuper__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocationSuper__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationSuperAccess().getSuperKeyword_1()); }

	'super' 

{ after(grammarAccess.getRuleInvocationSuperAccess().getSuperKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureMethodInvocation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group__0__Impl
	rule__FeatureMethodInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getFeatureMethodInvocationAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMethodInvocation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group__1__Impl
	rule__FeatureMethodInvocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getAlternatives_1()); }
(rule__FeatureMethodInvocation__Alternatives_1)
{ after(grammarAccess.getFeatureMethodInvocationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMethodInvocation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group__2__Impl
	rule__FeatureMethodInvocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFeatureMethodInvocationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMethodInvocation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group__3__Impl
	rule__FeatureMethodInvocation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getGroup_3()); }
(rule__FeatureMethodInvocation__Group_3__0)?
{ after(grammarAccess.getFeatureMethodInvocationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMethodInvocation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFeatureMethodInvocationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FeatureMethodInvocation__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group_1_0__0__Impl
	rule__FeatureMethodInvocation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getLessThanSignLessThanSignKeyword_1_0_0()); }

	'<<' 

{ after(grammarAccess.getFeatureMethodInvocationAccess().getLessThanSignLessThanSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMethodInvocation__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group_1_0__1__Impl
	rule__FeatureMethodInvocation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getExpressionAssignment_1_0_1()); }
(rule__FeatureMethodInvocation__ExpressionAssignment_1_0_1)
{ after(grammarAccess.getFeatureMethodInvocationAccess().getExpressionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMethodInvocation__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_2()); }

	'>>' 

{ after(grammarAccess.getFeatureMethodInvocationAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FeatureMethodInvocation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group_3__0__Impl
	rule__FeatureMethodInvocation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsAssignment_3_0()); }
(rule__FeatureMethodInvocation__ArgumentsAssignment_3_0)
{ after(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMethodInvocation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getGroup_3_1()); }
(rule__FeatureMethodInvocation__Group_3_1__0)*
{ after(grammarAccess.getFeatureMethodInvocationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureMethodInvocation__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group_3_1__0__Impl
	rule__FeatureMethodInvocation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getFeatureMethodInvocationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMethodInvocation__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMethodInvocation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsAssignment_3_1_1()); }
(rule__FeatureMethodInvocation__ArgumentsAssignment_3_1_1)
{ after(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeOperationInvocation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group__0__Impl
	rule__NativeOperationInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getHyphenMinusGreaterThanSignKeyword_0()); }

	'->' 

{ after(grammarAccess.getNativeOperationInvocationAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeOperationInvocation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group__1__Impl
	rule__NativeOperationInvocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getNameAssignment_1()); }
(rule__NativeOperationInvocation__NameAssignment_1)
{ after(grammarAccess.getNativeOperationInvocationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeOperationInvocation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group__2__Impl
	rule__NativeOperationInvocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getNativeOperationInvocationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeOperationInvocation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group__3__Impl
	rule__NativeOperationInvocation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getGroup_3()); }
(rule__NativeOperationInvocation__Group_3__0)?
{ after(grammarAccess.getNativeOperationInvocationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeOperationInvocation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getNativeOperationInvocationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NativeOperationInvocation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group_3__0__Impl
	rule__NativeOperationInvocation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getArgumentsAssignment_3_0()); }
(rule__NativeOperationInvocation__ArgumentsAssignment_3_0)
{ after(grammarAccess.getNativeOperationInvocationAccess().getArgumentsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeOperationInvocation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getGroup_3_1()); }
(rule__NativeOperationInvocation__Group_3_1__0)*
{ after(grammarAccess.getNativeOperationInvocationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeOperationInvocation__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group_3_1__0__Impl
	rule__NativeOperationInvocation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getNativeOperationInvocationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeOperationInvocation__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeOperationInvocation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getArgumentsAssignment_3_1_1()); }
(rule__NativeOperationInvocation__ArgumentsAssignment_3_1_1)
{ after(grammarAccess.getNativeOperationInvocationAccess().getArgumentsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureField__Group__0__Impl
	rule__FeatureField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureFieldAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getFeatureFieldAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureFieldAccess().getAlternatives_1()); }
(rule__FeatureField__Alternatives_1)
{ after(grammarAccess.getFeatureFieldAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureField__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureField__Group_1_0__0__Impl
	rule__FeatureField__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureField__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureFieldAccess().getLessThanSignLessThanSignKeyword_1_0_0()); }

	'<<' 

{ after(grammarAccess.getFeatureFieldAccess().getLessThanSignLessThanSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureField__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureField__Group_1_0__1__Impl
	rule__FeatureField__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureField__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureFieldAccess().getExpressionAssignment_1_0_1()); }
(rule__FeatureField__ExpressionAssignment_1_0_1)
{ after(grammarAccess.getFeatureFieldAccess().getExpressionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureField__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureField__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureField__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureFieldAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_2()); }

	'>>' 

{ after(grammarAccess.getFeatureFieldAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableAccess__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAccess__Group_0__0__Impl
	rule__VariableAccess__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getPrefixOperatorAssignment_0_0()); }
(rule__VariableAccess__PrefixOperatorAssignment_0_0)
{ after(grammarAccess.getVariableAccessAccess().getPrefixOperatorAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAccess__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAccess__Group_0__1__Impl
	rule__VariableAccess__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getVariableAssignment_0_1()); }
(rule__VariableAccess__VariableAssignment_0_1)
{ after(grammarAccess.getVariableAccessAccess().getVariableAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAccess__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAccess__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getFeaturesAssignment_0_2()); }
(rule__VariableAccess__FeaturesAssignment_0_2)*
{ after(grammarAccess.getVariableAccessAccess().getFeaturesAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableAccess__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAccess__Group_1__0__Impl
	rule__VariableAccess__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getVariableAssignment_1_0()); }
(rule__VariableAccess__VariableAssignment_1_0)
{ after(grammarAccess.getVariableAccessAccess().getVariableAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAccess__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAccess__Group_1__1__Impl
	rule__VariableAccess__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getFeaturesAssignment_1_1()); }
(rule__VariableAccess__FeaturesAssignment_1_1)*
{ after(grammarAccess.getVariableAccessAccess().getFeaturesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAccess__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAccess__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getAlternatives_1_2()); }
(rule__VariableAccess__Alternatives_1_2)?
{ after(grammarAccess.getVariableAccessAccess().getAlternatives_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableAccess__Group_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAccess__Group_1_2_0__0__Impl
	rule__VariableAccess__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Group_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getDefaultKeyword_1_2_0_0()); }

	'default' 

{ after(grammarAccess.getVariableAccessAccess().getDefaultKeyword_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAccess__Group_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAccess__Group_1_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__Group_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getDefaultAssignment_1_2_0_1()); }
(rule__VariableAccess__DefaultAssignment_1_2_0_1)
{ after(grammarAccess.getVariableAccessAccess().getDefaultAssignment_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAccess__Group__0__Impl
	rule__StaticAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getStaticAccessAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAccess__Group__1__Impl
	rule__StaticAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getAlternatives_1()); }
(rule__StaticAccess__Alternatives_1)
{ after(grammarAccess.getStaticAccessAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticAccess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAccess__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getFeaturesAssignment_2()); }
(rule__StaticAccess__FeaturesAssignment_2)*
{ after(grammarAccess.getStaticAccessAccess().getFeaturesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StaticAccess__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAccess__Group_1_0__0__Impl
	rule__StaticAccess__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getLessThanSignLessThanSignKeyword_1_0_0()); }

	'<<' 

{ after(grammarAccess.getStaticAccessAccess().getLessThanSignLessThanSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticAccess__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAccess__Group_1_0__1__Impl
	rule__StaticAccess__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getExpressionAssignment_1_0_1()); }
(rule__StaticAccess__ExpressionAssignment_1_0_1)
{ after(grammarAccess.getStaticAccessAccess().getExpressionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticAccess__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticAccess__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_2()); }

	'>>' 

{ after(grammarAccess.getStaticAccessAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getFQNAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group__0__Impl
	rule__AnnotationDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getAnnotationKeyword_0()); }

	'annotation' 

{ after(grammarAccess.getAnnotationDeclAccess().getAnnotationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group__1__Impl
	rule__AnnotationDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getNameAssignment_1()); }
(rule__AnnotationDecl__NameAssignment_1)
{ after(grammarAccess.getAnnotationDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group__2__Impl
	rule__AnnotationDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getGroup_2()); }
(rule__AnnotationDecl__Group_2__0)?
{ after(grammarAccess.getAnnotationDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group__3__Impl
	rule__AnnotationDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAnnotationDeclAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group__4__Impl
	rule__AnnotationDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getGroup_4()); }
(rule__AnnotationDecl__Group_4__0)?
{ after(grammarAccess.getAnnotationDeclAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAnnotationDeclAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AnnotationDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_2__0__Impl
	rule__AnnotationDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAnnotationDeclAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_2__1__Impl
	rule__AnnotationDecl__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getTargetsAssignment_2_1()); }
(rule__AnnotationDecl__TargetsAssignment_2_1)
{ after(grammarAccess.getAnnotationDeclAccess().getTargetsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_2__2__Impl
	rule__AnnotationDecl__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getGroup_2_2()); }
(rule__AnnotationDecl__Group_2_2__0)*
{ after(grammarAccess.getAnnotationDeclAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getAnnotationDeclAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AnnotationDecl__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_2_2__0__Impl
	rule__AnnotationDecl__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getAnnotationDeclAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getTargetsAssignment_2_2_1()); }
(rule__AnnotationDecl__TargetsAssignment_2_2_1)
{ after(grammarAccess.getAnnotationDeclAccess().getTargetsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationDecl__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4__0__Impl
	rule__AnnotationDecl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getAlternatives_4_0()); }
(rule__AnnotationDecl__Alternatives_4_0)
{ after(grammarAccess.getAnnotationDeclAccess().getAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getGroup_4_1()); }
(rule__AnnotationDecl__Group_4_1__0)*
{ after(grammarAccess.getAnnotationDeclAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationDecl__Group_4_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4_0_0__0__Impl
	rule__AnnotationDecl__Group_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getSelfKeyword_4_0_0_0()); }

	'self' 

{ after(grammarAccess.getAnnotationDeclAccess().getSelfKeyword_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_4_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4_0_0__1__Impl
	rule__AnnotationDecl__Group_4_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getValuetypeAssignment_4_0_0_1()); }
(rule__AnnotationDecl__ValuetypeAssignment_4_0_0_1)
{ after(grammarAccess.getAnnotationDeclAccess().getValuetypeAssignment_4_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_4_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4_0_0__2__Impl
	rule__AnnotationDecl__Group_4_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getManyAssignment_4_0_0_2()); }
(rule__AnnotationDecl__ManyAssignment_4_0_0_2)?
{ after(grammarAccess.getAnnotationDeclAccess().getManyAssignment_4_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_4_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getAlternatives_4_0_0_3()); }
(rule__AnnotationDecl__Alternatives_4_0_0_3)
{ after(grammarAccess.getAnnotationDeclAccess().getAlternatives_4_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AnnotationDecl__Group_4_0_0_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4_0_0_3_1__0__Impl
	rule__AnnotationDecl__Group_4_0_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4_0_0_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getEqualsSignKeyword_4_0_0_3_1_0()); }

	'=' 

{ after(grammarAccess.getAnnotationDeclAccess().getEqualsSignKeyword_4_0_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_4_0_0_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4_0_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4_0_0_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getDefaultAssignment_4_0_0_3_1_1()); }
(rule__AnnotationDecl__DefaultAssignment_4_0_0_3_1_1)
{ after(grammarAccess.getAnnotationDeclAccess().getDefaultAssignment_4_0_0_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationDecl__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4_1__0__Impl
	rule__AnnotationDecl__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getAnnotationDeclAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDecl__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationDecl__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAssignment_4_1_1()); }
(rule__AnnotationDecl__PropertyDeclsAssignment_4_1_1)
{ after(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationPropertyDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationPropertyDecl__Group__0__Impl
	rule__AnnotationPropertyDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getTypeAssignment_0()); }
(rule__AnnotationPropertyDecl__TypeAssignment_0)
{ after(grammarAccess.getAnnotationPropertyDeclAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationPropertyDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationPropertyDecl__Group__1__Impl
	rule__AnnotationPropertyDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getNameAssignment_1()); }
(rule__AnnotationPropertyDecl__NameAssignment_1)
{ after(grammarAccess.getAnnotationPropertyDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationPropertyDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationPropertyDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getAlternatives_2()); }
(rule__AnnotationPropertyDecl__Alternatives_2)
{ after(grammarAccess.getAnnotationPropertyDeclAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotationPropertyDecl__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationPropertyDecl__Group_2_1__0__Impl
	rule__AnnotationPropertyDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getEqualsSignKeyword_2_1_0()); }

	'=' 

{ after(grammarAccess.getAnnotationPropertyDeclAccess().getEqualsSignKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationPropertyDecl__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationPropertyDecl__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getDefaultAssignment_2_1_1()); }
(rule__AnnotationPropertyDecl__DefaultAssignment_2_1_1)
{ after(grammarAccess.getAnnotationPropertyDeclAccess().getDefaultAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getDeclAssignment_1()); }
(rule__Annotation__DeclAssignment_1)
{ after(grammarAccess.getAnnotationAccess().getDeclAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getGroup_2()); }
(rule__Annotation__Group_2__0)?
{ after(grammarAccess.getAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Annotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2__0__Impl
	rule__Annotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2__1__Impl
	rule__Annotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives_2_1()); }
(rule__Annotation__Alternatives_2_1)
{ after(grammarAccess.getAnnotationAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2__2__Impl
	rule__Annotation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getGroup_2_2()); }
(rule__Annotation__Group_2_2__0)*
{ after(grammarAccess.getAnnotationAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Annotation__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2_2__0__Impl
	rule__Annotation__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives_2_2_1()); }
(rule__Annotation__Alternatives_2_2_1)
{ after(grammarAccess.getAnnotationAccess().getAlternatives_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationProperty__Group__0__Impl
	rule__AnnotationProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyAccess().getDeclAssignment_0()); }
(rule__AnnotationProperty__DeclAssignment_0)
{ after(grammarAccess.getAnnotationPropertyAccess().getDeclAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationProperty__Group__1__Impl
	rule__AnnotationProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAnnotationPropertyAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyAccess().getValueAssignment_2()); }
(rule__AnnotationProperty__ValueAssignment_2)
{ after(grammarAccess.getAnnotationPropertyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Module__PackageNameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getPackageNameFQNParserRuleCall_0_1_0()); }
	ruleFQN{ after(grammarAccess.getModuleAccess().getPackageNameFQNParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ImportsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getImportsModuleReferenceParserRuleCall_4_1_0()); }
	ruleModuleReference{ after(grammarAccess.getModuleAccess().getImportsModuleReferenceParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__MetamodelDeclarationsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getMetamodelDeclarationsMetamodelDeclarationParserRuleCall_5_0_0()); }
	ruleMetamodelDeclaration{ after(grammarAccess.getModuleAccess().getMetamodelDeclarationsMetamodelDeclarationParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__AnnotationDefinitionsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAnnotationDefinitionsAnnotationsDefinitionParserRuleCall_6_0_0()); }
	ruleAnnotationsDefinition{ after(grammarAccess.getModuleAccess().getAnnotationDefinitionsAnnotationsDefinitionParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__RuleDeclarationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getRuleDeclarationsRuleDeclarationParserRuleCall_7_0()); }
	ruleRuleDeclaration{ after(grammarAccess.getModuleAccess().getRuleDeclarationsRuleDeclarationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleReference__ModuleAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleReferenceAccess().getModuleModuleCrossReference_0()); }
(
{ before(grammarAccess.getModuleReferenceAccess().getModuleModuleFQNParserRuleCall_0_1()); }
	ruleFQN{ after(grammarAccess.getModuleReferenceAccess().getModuleModuleFQNParserRuleCall_0_1()); }
)
{ after(grammarAccess.getModuleReferenceAccess().getModuleModuleCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getTypeIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMetamodelDeclarationAccess().getTypeIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMetamodelDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__PropertiesAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getPropertiesPropertyParserRuleCall_3_1_0_0()); }
	ruleProperty{ after(grammarAccess.getMetamodelDeclarationAccess().getPropertiesPropertyParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__PropertiesAssignment_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getPropertiesPropertyParserRuleCall_3_1_1_1_0()); }
	ruleProperty{ after(grammarAccess.getMetamodelDeclarationAccess().getPropertiesPropertyParserRuleCall_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__ReplacesAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getReplacesIDTerminalRuleCall_4_1_0_0()); }
	RULE_ID{ after(grammarAccess.getMetamodelDeclarationAccess().getReplacesIDTerminalRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelDeclaration__ReplacesAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelDeclarationAccess().getReplacesIDTerminalRuleCall_4_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getMetamodelDeclarationAccess().getReplacesIDTerminalRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getPropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getRuleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__VisibilityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getVisibilityVisibilityModifierEnumRuleCall_1_0()); }
	ruleVisibilityModifier{ after(grammarAccess.getRuleDeclarationAccess().getVisibilityVisibilityModifierEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExecAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getExecExecutionModifierEnumRuleCall_2_0()); }
	ruleExecutionModifier{ after(grammarAccess.getRuleDeclarationAccess().getExecExecutionModifierEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__TracedAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getTracedTracedKeyword_3_0_0()); }
(
{ before(grammarAccess.getRuleDeclarationAccess().getTracedTracedKeyword_3_0_0()); }

	'traced' 

{ after(grammarAccess.getRuleDeclarationAccess().getTracedTracedKeyword_3_0_0()); }
)

{ after(grammarAccess.getRuleDeclarationAccess().getTracedTracedKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__StealthAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getStealthStealthKeyword_3_1_0()); }
(
{ before(grammarAccess.getRuleDeclarationAccess().getStealthStealthKeyword_3_1_0()); }

	'stealth' 

{ after(grammarAccess.getRuleDeclarationAccess().getStealthStealthKeyword_3_1_0()); }
)

{ after(grammarAccess.getRuleDeclarationAccess().getStealthStealthKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__VirtualAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getVirtualVirtualKeyword_4_0()); }
(
{ before(grammarAccess.getRuleDeclarationAccess().getVirtualVirtualKeyword_4_0()); }

	'virtual' 

{ after(grammarAccess.getRuleDeclarationAccess().getVirtualVirtualKeyword_4_0()); }
)

{ after(grammarAccess.getRuleDeclarationAccess().getVirtualVirtualKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__MultiAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getMultiMultiKeyword_5_0()); }
(
{ before(grammarAccess.getRuleDeclarationAccess().getMultiMultiKeyword_5_0()); }

	'multi' 

{ after(grammarAccess.getRuleDeclarationAccess().getMultiMultiKeyword_5_0()); }
)

{ after(grammarAccess.getRuleDeclarationAccess().getMultiMultiKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__NameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getRuleDeclarationAccess().getNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__FormalParametersAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getFormalParametersFormalParameterParserRuleCall_8_0_0()); }
	ruleFormalParameter{ after(grammarAccess.getRuleDeclarationAccess().getFormalParametersFormalParameterParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__FormalParametersAssignment_8_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getFormalParametersFormalParameterParserRuleCall_8_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getRuleDeclarationAccess().getFormalParametersFormalParameterParserRuleCall_8_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ReturnParametersAssignment_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getReturnParametersReturnParameterParserRuleCall_10_2_0()); }
	ruleReturnParameter{ after(grammarAccess.getRuleDeclarationAccess().getReturnParametersReturnParameterParserRuleCall_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ReturnParametersAssignment_10_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getReturnParametersReturnParameterParserRuleCall_10_3_1_0()); }
	ruleReturnParameter{ after(grammarAccess.getRuleDeclarationAccess().getReturnParametersReturnParameterParserRuleCall_10_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ImplementedRulesAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getImplementedRulesSimpleRuleReferenceParserRuleCall_11_1_0()); }
	ruleSimpleRuleReference{ after(grammarAccess.getRuleDeclarationAccess().getImplementedRulesSimpleRuleReferenceParserRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ImplementedRulesAssignment_11_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getImplementedRulesSimpleRuleReferenceParserRuleCall_11_2_1_0()); }
	ruleSimpleRuleReference{ after(grammarAccess.getRuleDeclarationAccess().getImplementedRulesSimpleRuleReferenceParserRuleCall_11_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__OverriddenRuleAssignment_12_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getOverriddenRuleSimpleRuleReferenceParserRuleCall_12_1_0()); }
	ruleSimpleRuleReference{ after(grammarAccess.getRuleDeclarationAccess().getOverriddenRuleSimpleRuleReferenceParserRuleCall_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExcludingRulesAssignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getExcludingRulesSimpleRuleReferenceParserRuleCall_13_1_0()); }
	ruleSimpleRuleReference{ after(grammarAccess.getRuleDeclarationAccess().getExcludingRulesSimpleRuleReferenceParserRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__ExcludingRulesAssignment_13_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getExcludingRulesSimpleRuleReferenceParserRuleCall_13_2_1_0()); }
	ruleSimpleRuleReference{ after(grammarAccess.getRuleDeclarationAccess().getExcludingRulesSimpleRuleReferenceParserRuleCall_13_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__TriggerAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getTriggerTriggerParserRuleCall_14_0()); }
	ruleTrigger{ after(grammarAccess.getRuleDeclarationAccess().getTriggerTriggerParserRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__JavaSpecAssignment_15_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getJavaSpecJavaSpecParserRuleCall_15_1_0_0()); }
	ruleJavaSpec{ after(grammarAccess.getRuleDeclarationAccess().getJavaSpecJavaSpecParserRuleCall_15_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__BodyAssignment_15_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleDeclarationAccess().getBodyBlockParserRuleCall_15_2_0()); }
	ruleBlock{ after(grammarAccess.getRuleDeclarationAccess().getBodyBlockParserRuleCall_15_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__RuleDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getRuleDeclarationRuleDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getRuleDeclarationRuleDeclarationFQNParserRuleCall_0_0_1()); }
	ruleFQN{ after(grammarAccess.getSimpleRuleReferenceAccess().getRuleDeclarationRuleDeclarationFQNParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSimpleRuleReferenceAccess().getRuleDeclarationRuleDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__ParameterReferencesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesSimpleParameterReferenceParserRuleCall_2_0()); }
	ruleSimpleParameterReference{ after(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesSimpleParameterReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__ParameterReferencesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesSimpleParameterReferenceParserRuleCall_3_1_0()); }
	ruleSimpleParameterReference{ after(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesSimpleParameterReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__ReturnReferencesAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesSimpleParameterReferenceParserRuleCall_5_2_0()); }
	ruleSimpleParameterReference{ after(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesSimpleParameterReferenceParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleRuleReference__ReturnReferencesAssignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesSimpleParameterReferenceParserRuleCall_5_3_1_0()); }
	ruleSimpleParameterReference{ after(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesSimpleParameterReferenceParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__RuleDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getRuleDeclarationRuleDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getRuleDeclarationRuleDeclarationFQNParserRuleCall_0_0_1()); }
	ruleFQN{ after(grammarAccess.getQualifiedRuleReferenceAccess().getRuleDeclarationRuleDeclarationFQNParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getQualifiedRuleReferenceAccess().getRuleDeclarationRuleDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__ParameterReferencesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesQualifiedParameterReferenceParserRuleCall_2_0()); }
	ruleQualifiedParameterReference{ after(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesQualifiedParameterReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__ParameterReferencesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesQualifiedParameterReferenceParserRuleCall_3_1_0()); }
	ruleQualifiedParameterReference{ after(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesQualifiedParameterReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__ReturnReferencesAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesQualifiedParameterReferenceParserRuleCall_5_2_0()); }
	ruleQualifiedParameterReference{ after(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesQualifiedParameterReferenceParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedRuleReference__ReturnReferencesAssignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesQualifiedParameterReferenceParserRuleCall_5_3_1_0()); }
	ruleQualifiedParameterReference{ after(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesQualifiedParameterReferenceParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleParameterReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleParameterReferenceAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getSimpleParameterReferenceAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleParameterReference__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleParameterReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSimpleParameterReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedParameterReference__VardeclAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedParameterReferenceAccess().getVardeclTypedVarDeclarationParserRuleCall_0()); }
	ruleTypedVarDeclaration{ after(grammarAccess.getQualifiedParameterReferenceAccess().getVardeclTypedVarDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__TriggerRulesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTriggerRulesQualifiedRuleReferenceParserRuleCall_2_0()); }
	ruleQualifiedRuleReference{ after(grammarAccess.getTriggerAccess().getTriggerRulesQualifiedRuleReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__TriggerRulesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTriggerRulesQualifiedRuleReferenceParserRuleCall_3_1_0()); }
	ruleQualifiedRuleReference{ after(grammarAccess.getTriggerAccess().getTriggerRulesQualifiedRuleReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__WithAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getWithBlockParserRuleCall_5_1_0()); }
	ruleBlock{ after(grammarAccess.getTriggerAccess().getWithBlockParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__WhenAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getWhenExpressionParserRuleCall_6_2_0()); }
	ruleExpression{ after(grammarAccess.getTriggerAccess().getWhenExpressionParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__PropertiesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getPropertiesPropertyParserRuleCall_2_0()); }
	ruleProperty{ after(grammarAccess.getJavaSpecAccess().getPropertiesPropertyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaSpec__PropertiesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaSpecAccess().getPropertiesPropertyParserRuleCall_3_1_0()); }
	ruleProperty{ after(grammarAccess.getJavaSpecAccess().getPropertiesPropertyParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getFormalParameterAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getModifierFormalParameterModifierEnumRuleCall_1_0()); }
	ruleFormalParameterModifier{ after(grammarAccess.getFormalParameterAccess().getModifierFormalParameterModifierEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__VardeclAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getVardeclTypedVarDeclarationParserRuleCall_2_0()); }
	ruleTypedVarDeclaration{ after(grammarAccess.getFormalParameterAccess().getVardeclTypedVarDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameter__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getReturnParameterAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameter__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterAccess().getModifierReturnParameterModifierEnumRuleCall_1_0()); }
	ruleReturnParameterModifier{ after(grammarAccess.getReturnParameterAccess().getModifierReturnParameterModifierEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameter__VardeclAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterAccess().getVardeclTypedVarDeclarationParserRuleCall_2_0()); }
	ruleTypedVarDeclaration{ after(grammarAccess.getReturnParameterAccess().getVardeclTypedVarDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__MetamodelDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getMetamodelDeclarationMetamodelDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getReferenceTypeAccess().getMetamodelDeclarationMetamodelDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceTypeAccess().getMetamodelDeclarationMetamodelDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReferenceTypeAccess().getMetamodelDeclarationMetamodelDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__EClassifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getEClassifierEClassifierCrossReference_2_0()); }
(
{ before(grammarAccess.getReferenceTypeAccess().getEClassifierEClassifierIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceTypeAccess().getEClassifierEClassifierIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getReferenceTypeAccess().getEClassifierEClassifierCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__PrimitiveTypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypePrimitiveTypeSpecEnumRuleCall_0()); }
	rulePrimitiveTypeSpec{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypePrimitiveTypeSpecEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__CollectionTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getCollectionTypeCollectionTypeSpecEnumRuleCall_0_0()); }
	ruleCollectionTypeSpec{ after(grammarAccess.getCollectionTypeAccess().getCollectionTypeCollectionTypeSpecEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__TypeParAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getTypeParTypeParserRuleCall_1_1_0()); }
	ruleType{ after(grammarAccess.getCollectionTypeAccess().getTypeParTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsBlockStatementParserRuleCall_2_0()); }
	ruleBlockStatement{ after(grammarAccess.getBlockAccess().getStatementsBlockStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclarationStatement__LocalVariableDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationStatementAccess().getLocalVariableDeclarationLocalVariableDeclarationParserRuleCall_0_0()); }
	ruleLocalVariableDeclaration{ after(grammarAccess.getLocalVariableDeclarationStatementAccess().getLocalVariableDeclarationLocalVariableDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__VardeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getVardeclTypedVarDeclarationParserRuleCall_0_0()); }
	ruleTypedVarDeclaration{ after(grammarAccess.getLocalVariableDeclarationAccess().getVardeclTypedVarDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getLocalVariableDeclarationAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVarDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedVarDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getTypedVarDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedVarDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypedVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InferredVarDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInferredVarDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getInferredVarDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InferredVarDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInferredVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInferredVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__StatementExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getStatementExpressionStatementExpressionParserRuleCall_0_0()); }
	ruleStatementExpression{ after(grammarAccess.getExpressionStatementAccess().getStatementExpressionStatementExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__OperatorAssignment_4_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getOperatorAssignmentOperatorEnumRuleCall_4_1_0_1_0()); }
	ruleAssignmentOperator{ after(grammarAccess.getStatementExpressionAccess().getOperatorAssignmentOperatorEnumRuleCall_4_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__ExpressionAssignment_4_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getExpressionExpressionParserRuleCall_4_1_0_2_0()); }
	ruleExpression{ after(grammarAccess.getStatementExpressionAccess().getExpressionExpressionParserRuleCall_4_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__LhsAssignment_4_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getLhsVariableAccessParserRuleCall_4_1_1_1_1_0()); }
	ruleVariableAccess{ after(grammarAccess.getStatementExpressionAccess().getLhsVariableAccessParserRuleCall_4_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__OperatorAssignment_4_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getOperatorAssignmentOperatorEnumRuleCall_4_1_1_2_0()); }
	ruleAssignmentOperator{ after(grammarAccess.getStatementExpressionAccess().getOperatorAssignmentOperatorEnumRuleCall_4_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__ExpressionAssignment_4_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementExpressionAccess().getExpressionExpressionParserRuleCall_4_1_1_3_0()); }
	ruleExpression{ after(grammarAccess.getStatementExpressionAccess().getExpressionExpressionParserRuleCall_4_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__TrueStatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getTrueStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getTrueStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseStatementAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseStatementStatementParserRuleCall_5_1_0()); }
	ruleStatement{ after(grammarAccess.getIfStatementAccess().getElseStatementStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__StatementExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getStatementExpressionsStatementExpressionParserRuleCall_1_0_0()); }
	ruleStatementExpression{ after(grammarAccess.getForInitAccess().getStatementExpressionsStatementExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__VarDeclarationsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getVarDeclarationsLocalVariableDeclarationParserRuleCall_1_1_0_0()); }
	ruleLocalVariableDeclaration{ after(grammarAccess.getForInitAccess().getVarDeclarationsLocalVariableDeclarationParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__StatementExpressionsAssignment_1_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getStatementExpressionsStatementExpressionParserRuleCall_1_1_1_0_1_0()); }
	ruleStatementExpression{ after(grammarAccess.getForInitAccess().getStatementExpressionsStatementExpressionParserRuleCall_1_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__VarDeclarationsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForInitAccess().getVarDeclarationsLocalVariableDeclarationParserRuleCall_1_1_1_1_0()); }
	ruleLocalVariableDeclaration{ after(grammarAccess.getForInitAccess().getVarDeclarationsLocalVariableDeclarationParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__StatementExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForUpdateAccess().getStatementExpressionStatementExpressionParserRuleCall_0_0()); }
	ruleStatementExpression{ after(grammarAccess.getForUpdateAccess().getStatementExpressionStatementExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__StatementExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForUpdateAccess().getStatementExpressionStatementExpressionParserRuleCall_1_1_0()); }
	ruleStatementExpression{ after(grammarAccess.getForUpdateAccess().getStatementExpressionStatementExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__LoopVariableAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLoopVariableLoopVariableParserRuleCall_2_0_0_0()); }
	ruleLoopVariable{ after(grammarAccess.getForStatementAccess().getLoopVariableLoopVariableParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ExpressionAssignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_2_0_2_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForInitAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForInitForInitParserRuleCall_2_1_0_0()); }
	ruleForInit{ after(grammarAccess.getForStatementAccess().getForInitForInitParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ExpressionAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_2_1_2_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForUpdateAssignment_2_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForUpdateForUpdateParserRuleCall_2_1_4_0()); }
	ruleForUpdate{ after(grammarAccess.getForStatementAccess().getForUpdateForUpdateParserRuleCall_2_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariable__VardeclAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableAccess().getVardeclVarDeclarationParserRuleCall_0()); }
	ruleVarDeclaration{ after(grammarAccess.getLoopVariableAccess().getVardeclVarDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStatement__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__TryBlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTryBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getTryStatementAccess().getTryBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__CatchesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getCatchesCatchParserRuleCall_2_0()); }
	ruleCatch{ after(grammarAccess.getTryStatementAccess().getCatchesCatchParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__FinallyBlockAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyBlockBlockParserRuleCall_3_1_0()); }
	ruleBlock{ after(grammarAccess.getTryStatementAccess().getFinallyBlockBlockParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__FormalParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchAccess().getFormalParameterFormalParameterParserRuleCall_2_0()); }
	ruleFormalParameter{ after(grammarAccess.getCatchAccess().getFormalParameterFormalParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Catch__BlockAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCatchAccess().getBlockBlockParserRuleCall_4_0()); }
	ruleBlock{ after(grammarAccess.getCatchAccess().getBlockBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_10__VariableAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_10Access().getVariableLoopVariableParserRuleCall_0_1_0()); }
	ruleLoopVariable{ after(grammarAccess.getExpression_10Access().getVariableLoopVariableParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_10__ExpressionAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_10Access().getExpressionExpression_1ParserRuleCall_0_3_0()); }
	ruleExpression_1{ after(grammarAccess.getExpression_10Access().getExpressionExpression_1ParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_1__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_1Access().getOpBooleanOperatorEnumRuleCall_1_1_0()); }
	ruleBooleanOperator{ after(grammarAccess.getExpression_1Access().getOpBooleanOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_1__RhsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_1Access().getRhsExpression_2ParserRuleCall_1_2_0()); }
	ruleExpression_2{ after(grammarAccess.getExpression_1Access().getRhsExpression_2ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_2__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_2Access().getOpEqualityOperatorEnumRuleCall_1_1_0()); }
	ruleEqualityOperator{ after(grammarAccess.getExpression_2Access().getOpEqualityOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_2__RhsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_2Access().getRhsExpression_3ParserRuleCall_1_2_0()); }
	ruleExpression_3{ after(grammarAccess.getExpression_2Access().getRhsExpression_3ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_3__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_3Access().getOpRelationalOperatorEnumRuleCall_1_1_0()); }
	ruleRelationalOperator{ after(grammarAccess.getExpression_3Access().getOpRelationalOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_3__RhsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_3Access().getRhsExpression_5ParserRuleCall_1_2_0()); }
	ruleExpression_5{ after(grammarAccess.getExpression_3Access().getRhsExpression_5ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_5__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_5Access().getOpMathOperatorEnumRuleCall_1_1_0()); }
	ruleMathOperator{ after(grammarAccess.getExpression_5Access().getOpMathOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_5__RhsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_5Access().getRhsExpression_6ParserRuleCall_1_2_0()); }
	ruleExpression_6{ after(grammarAccess.getExpression_5Access().getRhsExpression_6ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_6__TypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_6Access().getTypeTypeParserRuleCall_0_2_0()); }
	ruleType{ after(grammarAccess.getExpression_6Access().getTypeTypeParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_6__ExpressionAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_6Access().getExpressionExpression_7ParserRuleCall_0_4_0()); }
	ruleExpression_7{ after(grammarAccess.getExpression_6Access().getExpressionExpression_7ParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_7__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_7Access().getExpressionExpression_8ParserRuleCall_1_2_0()); }
	ruleExpression_8{ after(grammarAccess.getExpression_7Access().getExpressionExpression_8ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_8__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_8Access().getOpUnaryMathOperatorEnumRuleCall_1_1_0()); }
	ruleUnaryMathOperator{ after(grammarAccess.getExpression_8Access().getOpUnaryMathOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_8__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_8Access().getExpressionExpression_9ParserRuleCall_1_2_0()); }
	ruleExpression_9{ after(grammarAccess.getExpression_8Access().getExpressionExpression_9ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_9__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_9Access().getTypeTypeParserRuleCall_1_2_0()); }
	ruleType{ after(grammarAccess.getExpression_9Access().getTypeTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__StringValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getStringValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__IntValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getIntValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntLiteralAccess().getIntValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__FloatValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getFloatValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getRealLiteralAccess().getFloatValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__BooleanValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanValueTrueKeyword_1_0_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanValueTrueKeyword_1_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getBooleanValueTrueKeyword_1_0_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getBooleanValueTrueKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__ArgumentsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__ArgumentsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__RuleDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getRuleDeclarationRuleDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getRuleInvocationAccess().getRuleDeclarationRuleDeclarationFQNParserRuleCall_0_0_1()); }
	ruleFQN{ after(grammarAccess.getRuleInvocationAccess().getRuleDeclarationRuleDeclarationFQNParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRuleInvocationAccess().getRuleDeclarationRuleDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__ArgumentsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getRuleInvocationAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleInvocation__ArgumentsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleInvocationAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getRuleInvocationAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__ExpressionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
	ruleExpression{ after(grammarAccess.getFeatureMethodInvocationAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getFeatureMethodInvocationAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__ArgumentsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMethodInvocation__ArgumentsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getNativeOperationInvocationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__ArgumentsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getArgumentsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getNativeOperationInvocationAccess().getArgumentsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeOperationInvocation__ArgumentsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeOperationInvocationAccess().getArgumentsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getNativeOperationInvocationAccess().getArgumentsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureField__ExpressionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureFieldAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
	ruleExpression{ after(grammarAccess.getFeatureFieldAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureField__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureFieldAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getFeatureFieldAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__PrefixOperatorAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getPrefixOperatorPPOperatorEnumRuleCall_0_0_0()); }
	rulePPOperator{ after(grammarAccess.getVariableAccessAccess().getPrefixOperatorPPOperatorEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__VariableAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getVariableVarDeclarationCrossReference_0_1_0()); }
(
{ before(grammarAccess.getVariableAccessAccess().getVariableVarDeclarationIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableAccessAccess().getVariableVarDeclarationIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getVariableAccessAccess().getVariableVarDeclarationCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__FeaturesAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getFeaturesFeatureParserRuleCall_0_2_0()); }
	ruleFeature{ after(grammarAccess.getVariableAccessAccess().getFeaturesFeatureParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__VariableAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getVariableVarDeclarationCrossReference_1_0_0()); }
(
{ before(grammarAccess.getVariableAccessAccess().getVariableVarDeclarationIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableAccessAccess().getVariableVarDeclarationIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getVariableAccessAccess().getVariableVarDeclarationCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__FeaturesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getFeaturesFeatureParserRuleCall_1_1_0()); }
	ruleFeature{ after(grammarAccess.getVariableAccessAccess().getFeaturesFeatureParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__DefaultAssignment_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getDefaultExpressionParserRuleCall_1_2_0_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableAccessAccess().getDefaultExpressionParserRuleCall_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__PostfixOperatorAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getPostfixOperatorPPOperatorEnumRuleCall_1_2_1_0()); }
	rulePPOperator{ after(grammarAccess.getVariableAccessAccess().getPostfixOperatorPPOperatorEnumRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__ExpressionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
	ruleExpression{ after(grammarAccess.getStaticAccessAccess().getExpressionExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getTypeTypeParserRuleCall_1_1_0()); }
	ruleType{ after(grammarAccess.getStaticAccessAccess().getTypeTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticAccess__FeaturesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccessAccess().getFeaturesFeatureParserRuleCall_2_0()); }
	ruleFeature{ after(grammarAccess.getStaticAccessAccess().getFeaturesFeatureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationsDefinition__AnnotationDeclsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationsDefinitionAccess().getAnnotationDeclsAnnotationDeclParserRuleCall_0()); }
	ruleAnnotationDecl{ after(grammarAccess.getAnnotationsDefinitionAccess().getAnnotationDeclsAnnotationDeclParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationDeclAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__TargetsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getTargetsAnnotationTargetSpecEnumRuleCall_2_1_0()); }
	ruleAnnotationTargetSpec{ after(grammarAccess.getAnnotationDeclAccess().getTargetsAnnotationTargetSpecEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__TargetsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getTargetsAnnotationTargetSpecEnumRuleCall_2_2_1_0()); }
	ruleAnnotationTargetSpec{ after(grammarAccess.getAnnotationDeclAccess().getTargetsAnnotationTargetSpecEnumRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__ValuetypeAssignment_4_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getValuetypePrimitiveTypeParserRuleCall_4_0_0_1_0()); }
	rulePrimitiveType{ after(grammarAccess.getAnnotationDeclAccess().getValuetypePrimitiveTypeParserRuleCall_4_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__ManyAssignment_4_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getManyAsteriskKeyword_4_0_0_2_0()); }
(
{ before(grammarAccess.getAnnotationDeclAccess().getManyAsteriskKeyword_4_0_0_2_0()); }

	'*' 

{ after(grammarAccess.getAnnotationDeclAccess().getManyAsteriskKeyword_4_0_0_2_0()); }
)

{ after(grammarAccess.getAnnotationDeclAccess().getManyAsteriskKeyword_4_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__RequiredAssignment_4_0_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getRequiredRequiredKeyword_4_0_0_3_0_0()); }
(
{ before(grammarAccess.getAnnotationDeclAccess().getRequiredRequiredKeyword_4_0_0_3_0_0()); }

	'required' 

{ after(grammarAccess.getAnnotationDeclAccess().getRequiredRequiredKeyword_4_0_0_3_0_0()); }
)

{ after(grammarAccess.getAnnotationDeclAccess().getRequiredRequiredKeyword_4_0_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__DefaultAssignment_4_0_0_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getDefaultLiteralParserRuleCall_4_0_0_3_1_1_0()); }
	ruleLiteral{ after(grammarAccess.getAnnotationDeclAccess().getDefaultLiteralParserRuleCall_4_0_0_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__PropertyDeclsAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAnnotationPropertyDeclParserRuleCall_4_0_1_0()); }
	ruleAnnotationPropertyDecl{ after(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAnnotationPropertyDeclParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDecl__PropertyDeclsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAnnotationPropertyDeclParserRuleCall_4_1_1_0()); }
	ruleAnnotationPropertyDecl{ after(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAnnotationPropertyDeclParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getTypePrimitiveTypeParserRuleCall_0_0()); }
	rulePrimitiveType{ after(grammarAccess.getAnnotationPropertyDeclAccess().getTypePrimitiveTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationPropertyDeclAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__RequiredAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getRequiredRequiredKeyword_2_0_0()); }
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getRequiredRequiredKeyword_2_0_0()); }

	'required' 

{ after(grammarAccess.getAnnotationPropertyDeclAccess().getRequiredRequiredKeyword_2_0_0()); }
)

{ after(grammarAccess.getAnnotationPropertyDeclAccess().getRequiredRequiredKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationPropertyDecl__DefaultAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyDeclAccess().getDefaultLiteralParserRuleCall_2_1_1_0()); }
	ruleLiteral{ after(grammarAccess.getAnnotationPropertyDeclAccess().getDefaultLiteralParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__DeclAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getDeclAnnotationDeclCrossReference_1_0()); }
(
{ before(grammarAccess.getAnnotationAccess().getDeclAnnotationDeclIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAnnotationAccess().getDeclAnnotationDeclIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAnnotationAccess().getDeclAnnotationDeclCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ValuesAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValuesLiteralParserRuleCall_2_1_0_0()); }
	ruleLiteral{ after(grammarAccess.getAnnotationAccess().getValuesLiteralParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__PropertiesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getPropertiesAnnotationPropertyParserRuleCall_2_1_1_0()); }
	ruleAnnotationProperty{ after(grammarAccess.getAnnotationAccess().getPropertiesAnnotationPropertyParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ValuesAssignment_2_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getValuesLiteralParserRuleCall_2_2_1_0_0()); }
	ruleLiteral{ after(grammarAccess.getAnnotationAccess().getValuesLiteralParserRuleCall_2_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__PropertiesAssignment_2_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getPropertiesAnnotationPropertyParserRuleCall_2_2_1_1_0()); }
	ruleAnnotationProperty{ after(grammarAccess.getAnnotationAccess().getPropertiesAnnotationPropertyParserRuleCall_2_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationProperty__DeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyAccess().getDeclAnnotationPropertyDeclCrossReference_0_0()); }
(
{ before(grammarAccess.getAnnotationPropertyAccess().getDeclAnnotationPropertyDeclIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAnnotationPropertyAccess().getDeclAnnotationPropertyDeclIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAnnotationPropertyAccess().getDeclAnnotationPropertyDeclCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationProperty__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationPropertyAccess().getValueLiteralParserRuleCall_2_0()); }
	ruleLiteral{ after(grammarAccess.getAnnotationPropertyAccess().getValueLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_FLOAT : ('0'..'9')* '.' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


