/*
* generated by Xtext
*/
package de.jevopi.mitra2.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.jevopi.mitra2.services.MitraGrammarAccess;

public class MitraParser extends AbstractContentAssistParser {
	
	@Inject
	private MitraGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.jevopi.mitra2.ui.contentassist.antlr.internal.InternalMitraParser createParser() {
		de.jevopi.mitra2.ui.contentassist.antlr.internal.InternalMitraParser result = new de.jevopi.mitra2.ui.contentassist.antlr.internal.InternalMitraParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRuleDeclarationAccess().getAlternatives_3(), "rule__RuleDeclaration__Alternatives_3");
					put(grammarAccess.getRuleDeclarationAccess().getAlternatives_15(), "rule__RuleDeclaration__Alternatives_15");
					put(grammarAccess.getRuleReferenceAccess().getAlternatives(), "rule__RuleReference__Alternatives");
					put(grammarAccess.getParameterReferenceAccess().getAlternatives(), "rule__ParameterReference__Alternatives");
					put(grammarAccess.getParameterAccess().getAlternatives(), "rule__Parameter__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getBlockStatementAccess().getAlternatives(), "rule__BlockStatement__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getVarDeclarationAccess().getAlternatives(), "rule__VarDeclaration__Alternatives");
					put(grammarAccess.getStatementExpressionAccess().getAlternatives(), "rule__StatementExpression__Alternatives");
					put(grammarAccess.getStatementExpressionAccess().getAlternatives_4_1(), "rule__StatementExpression__Alternatives_4_1");
					put(grammarAccess.getForInitAccess().getAlternatives_1(), "rule__ForInit__Alternatives_1");
					put(grammarAccess.getForInitAccess().getAlternatives_1_1_1(), "rule__ForInit__Alternatives_1_1_1");
					put(grammarAccess.getForStatementAccess().getAlternatives_2(), "rule__ForStatement__Alternatives_2");
					put(grammarAccess.getExpression_10Access().getAlternatives(), "rule__Expression_10__Alternatives");
					put(grammarAccess.getExpression_6Access().getAlternatives(), "rule__Expression_6__Alternatives");
					put(grammarAccess.getExpression_7Access().getAlternatives(), "rule__Expression_7__Alternatives");
					put(grammarAccess.getExpression_8Access().getAlternatives(), "rule__Expression_8__Alternatives");
					put(grammarAccess.getExpression_11Access().getAlternatives(), "rule__Expression_11__Alternatives");
					put(grammarAccess.getTerminalExpressionAccess().getAlternatives(), "rule__TerminalExpression__Alternatives");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getBooleanLiteralAccess().getAlternatives_1(), "rule__BooleanLiteral__Alternatives_1");
					put(grammarAccess.getFeatureAccess().getAlternatives(), "rule__Feature__Alternatives");
					put(grammarAccess.getMethodInvocationAccess().getAlternatives(), "rule__MethodInvocation__Alternatives");
					put(grammarAccess.getFeatureMethodInvocationAccess().getAlternatives_1(), "rule__FeatureMethodInvocation__Alternatives_1");
					put(grammarAccess.getMetamodelFeatureAccess().getAlternatives(), "rule__MetamodelFeature__Alternatives");
					put(grammarAccess.getFeatureFieldAccess().getAlternatives_1(), "rule__FeatureField__Alternatives_1");
					put(grammarAccess.getVariableAccessAccess().getAlternatives(), "rule__VariableAccess__Alternatives");
					put(grammarAccess.getVariableAccessAccess().getAlternatives_1_2(), "rule__VariableAccess__Alternatives_1_2");
					put(grammarAccess.getStaticAccessAccess().getAlternatives_1(), "rule__StaticAccess__Alternatives_1");
					put(grammarAccess.getAnnotationDeclAccess().getAlternatives_4_0(), "rule__AnnotationDecl__Alternatives_4_0");
					put(grammarAccess.getAnnotationDeclAccess().getAlternatives_4_0_0_3(), "rule__AnnotationDecl__Alternatives_4_0_0_3");
					put(grammarAccess.getAnnotationPropertyDeclAccess().getAlternatives_2(), "rule__AnnotationPropertyDecl__Alternatives_2");
					put(grammarAccess.getAnnotationAccess().getAlternatives_2_1(), "rule__Annotation__Alternatives_2_1");
					put(grammarAccess.getAnnotationAccess().getAlternatives_2_2_1(), "rule__Annotation__Alternatives_2_2_1");
					put(grammarAccess.getVisibilityModifierAccess().getAlternatives(), "rule__VisibilityModifier__Alternatives");
					put(grammarAccess.getExecutionModifierAccess().getAlternatives(), "rule__ExecutionModifier__Alternatives");
					put(grammarAccess.getFormalParameterModifierAccess().getAlternatives(), "rule__FormalParameterModifier__Alternatives");
					put(grammarAccess.getReturnParameterModifierAccess().getAlternatives(), "rule__ReturnParameterModifier__Alternatives");
					put(grammarAccess.getPrimitiveTypeSpecAccess().getAlternatives(), "rule__PrimitiveTypeSpec__Alternatives");
					put(grammarAccess.getCollectionTypeSpecAccess().getAlternatives(), "rule__CollectionTypeSpec__Alternatives");
					put(grammarAccess.getBooleanOperatorAccess().getAlternatives(), "rule__BooleanOperator__Alternatives");
					put(grammarAccess.getEqualityOperatorAccess().getAlternatives(), "rule__EqualityOperator__Alternatives");
					put(grammarAccess.getRelationalOperatorAccess().getAlternatives(), "rule__RelationalOperator__Alternatives");
					put(grammarAccess.getMathOperatorAccess().getAlternatives(), "rule__MathOperator__Alternatives");
					put(grammarAccess.getUnaryMathOperatorAccess().getAlternatives(), "rule__UnaryMathOperator__Alternatives");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getPPOperatorAccess().getAlternatives(), "rule__PPOperator__Alternatives");
					put(grammarAccess.getAnnotationTargetSpecAccess().getAlternatives(), "rule__AnnotationTargetSpec__Alternatives");
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getModuleAccess().getGroup_0(), "rule__Module__Group_0__0");
					put(grammarAccess.getModuleAccess().getGroup_4(), "rule__Module__Group_4__0");
					put(grammarAccess.getModuleAccess().getGroup_5(), "rule__Module__Group_5__0");
					put(grammarAccess.getModuleAccess().getGroup_6(), "rule__Module__Group_6__0");
					put(grammarAccess.getMetamodelDeclarationAccess().getGroup(), "rule__MetamodelDeclaration__Group__0");
					put(grammarAccess.getMetamodelDeclarationAccess().getGroup_3(), "rule__MetamodelDeclaration__Group_3__0");
					put(grammarAccess.getMetamodelDeclarationAccess().getGroup_3_1(), "rule__MetamodelDeclaration__Group_3_1__0");
					put(grammarAccess.getMetamodelDeclarationAccess().getGroup_3_1_1(), "rule__MetamodelDeclaration__Group_3_1_1__0");
					put(grammarAccess.getMetamodelDeclarationAccess().getGroup_4(), "rule__MetamodelDeclaration__Group_4__0");
					put(grammarAccess.getMetamodelDeclarationAccess().getGroup_4_1(), "rule__MetamodelDeclaration__Group_4_1__0");
					put(grammarAccess.getMetamodelDeclarationAccess().getGroup_4_1_1(), "rule__MetamodelDeclaration__Group_4_1_1__0");
					put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup(), "rule__RuleDeclaration__Group__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_8(), "rule__RuleDeclaration__Group_8__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_8_1(), "rule__RuleDeclaration__Group_8_1__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_10(), "rule__RuleDeclaration__Group_10__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_10_3(), "rule__RuleDeclaration__Group_10_3__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_11(), "rule__RuleDeclaration__Group_11__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_11_2(), "rule__RuleDeclaration__Group_11_2__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_12(), "rule__RuleDeclaration__Group_12__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_13(), "rule__RuleDeclaration__Group_13__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_13_2(), "rule__RuleDeclaration__Group_13_2__0");
					put(grammarAccess.getRuleDeclarationAccess().getGroup_15_1(), "rule__RuleDeclaration__Group_15_1__0");
					put(grammarAccess.getSimpleRuleReferenceAccess().getGroup(), "rule__SimpleRuleReference__Group__0");
					put(grammarAccess.getSimpleRuleReferenceAccess().getGroup_3(), "rule__SimpleRuleReference__Group_3__0");
					put(grammarAccess.getSimpleRuleReferenceAccess().getGroup_5(), "rule__SimpleRuleReference__Group_5__0");
					put(grammarAccess.getSimpleRuleReferenceAccess().getGroup_5_3(), "rule__SimpleRuleReference__Group_5_3__0");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getGroup(), "rule__QualifiedRuleReference__Group__0");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_3(), "rule__QualifiedRuleReference__Group_3__0");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_5(), "rule__QualifiedRuleReference__Group_5__0");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getGroup_5_3(), "rule__QualifiedRuleReference__Group_5_3__0");
					put(grammarAccess.getSimpleParameterReferenceAccess().getGroup(), "rule__SimpleParameterReference__Group__0");
					put(grammarAccess.getTriggerAccess().getGroup(), "rule__Trigger__Group__0");
					put(grammarAccess.getTriggerAccess().getGroup_3(), "rule__Trigger__Group_3__0");
					put(grammarAccess.getTriggerAccess().getGroup_5(), "rule__Trigger__Group_5__0");
					put(grammarAccess.getTriggerAccess().getGroup_6(), "rule__Trigger__Group_6__0");
					put(grammarAccess.getJavaSpecAccess().getGroup(), "rule__JavaSpec__Group__0");
					put(grammarAccess.getJavaSpecAccess().getGroup_3(), "rule__JavaSpec__Group_3__0");
					put(grammarAccess.getFormalParameterAccess().getGroup(), "rule__FormalParameter__Group__0");
					put(grammarAccess.getReturnParameterAccess().getGroup(), "rule__ReturnParameter__Group__0");
					put(grammarAccess.getReferenceTypeAccess().getGroup(), "rule__ReferenceType__Group__0");
					put(grammarAccess.getCollectionTypeAccess().getGroup(), "rule__CollectionType__Group__0");
					put(grammarAccess.getCollectionTypeAccess().getGroup_1(), "rule__CollectionType__Group_1__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getLocalVariableDeclarationStatementAccess().getGroup(), "rule__LocalVariableDeclarationStatement__Group__0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getGroup(), "rule__LocalVariableDeclaration__Group__0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getGroup_1(), "rule__LocalVariableDeclaration__Group_1__0");
					put(grammarAccess.getTypedVarDeclarationAccess().getGroup(), "rule__TypedVarDeclaration__Group__0");
					put(grammarAccess.getInferredVarDeclarationAccess().getGroup(), "rule__InferredVarDeclaration__Group__0");
					put(grammarAccess.getExpressionStatementAccess().getGroup(), "rule__ExpressionStatement__Group__0");
					put(grammarAccess.getStatementExpressionAccess().getGroup_4(), "rule__StatementExpression__Group_4__0");
					put(grammarAccess.getStatementExpressionAccess().getGroup_4_1_0(), "rule__StatementExpression__Group_4_1_0__0");
					put(grammarAccess.getStatementExpressionAccess().getGroup_4_1_1(), "rule__StatementExpression__Group_4_1_1__0");
					put(grammarAccess.getStatementExpressionAccess().getGroup_4_1_1_1(), "rule__StatementExpression__Group_4_1_1_1__0");
					put(grammarAccess.getEmptyStatementAccess().getGroup(), "rule__EmptyStatement__Group__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup_5(), "rule__IfStatement__Group_5__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getDoStatementAccess().getGroup(), "rule__DoStatement__Group__0");
					put(grammarAccess.getForInitAccess().getGroup(), "rule__ForInit__Group__0");
					put(grammarAccess.getForInitAccess().getGroup_1_1(), "rule__ForInit__Group_1_1__0");
					put(grammarAccess.getForInitAccess().getGroup_1_1_1_0(), "rule__ForInit__Group_1_1_1_0__0");
					put(grammarAccess.getForUpdateAccess().getGroup(), "rule__ForUpdate__Group__0");
					put(grammarAccess.getForUpdateAccess().getGroup_1(), "rule__ForUpdate__Group_1__0");
					put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup_2_0(), "rule__ForStatement__Group_2_0__0");
					put(grammarAccess.getForStatementAccess().getGroup_2_1(), "rule__ForStatement__Group_2_1__0");
					put(grammarAccess.getBreakStatementAccess().getGroup(), "rule__BreakStatement__Group__0");
					put(grammarAccess.getThrowStatementAccess().getGroup(), "rule__ThrowStatement__Group__0");
					put(grammarAccess.getTryStatementAccess().getGroup(), "rule__TryStatement__Group__0");
					put(grammarAccess.getTryStatementAccess().getGroup_3(), "rule__TryStatement__Group_3__0");
					put(grammarAccess.getCatchAccess().getGroup(), "rule__Catch__Group__0");
					put(grammarAccess.getExpression_10Access().getGroup_0(), "rule__Expression_10__Group_0__0");
					put(grammarAccess.getExpression_1Access().getGroup(), "rule__Expression_1__Group__0");
					put(grammarAccess.getExpression_1Access().getGroup_1(), "rule__Expression_1__Group_1__0");
					put(grammarAccess.getExpression_2Access().getGroup(), "rule__Expression_2__Group__0");
					put(grammarAccess.getExpression_2Access().getGroup_1(), "rule__Expression_2__Group_1__0");
					put(grammarAccess.getExpression_3Access().getGroup(), "rule__Expression_3__Group__0");
					put(grammarAccess.getExpression_3Access().getGroup_1(), "rule__Expression_3__Group_1__0");
					put(grammarAccess.getExpression_5Access().getGroup(), "rule__Expression_5__Group__0");
					put(grammarAccess.getExpression_5Access().getGroup_1(), "rule__Expression_5__Group_1__0");
					put(grammarAccess.getExpression_6Access().getGroup_0(), "rule__Expression_6__Group_0__0");
					put(grammarAccess.getExpression_7Access().getGroup_1(), "rule__Expression_7__Group_1__0");
					put(grammarAccess.getExpression_8Access().getGroup_1(), "rule__Expression_8__Group_1__0");
					put(grammarAccess.getExpression_9Access().getGroup(), "rule__Expression_9__Group__0");
					put(grammarAccess.getExpression_9Access().getGroup_1(), "rule__Expression_9__Group_1__0");
					put(grammarAccess.getExpression_11Access().getGroup_0(), "rule__Expression_11__Group_0__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup(), "rule__BooleanLiteral__Group__0");
					put(grammarAccess.getNullLiteralAccess().getGroup(), "rule__NullLiteral__Group__0");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup(), "rule__ClassInstanceCreationExpression__Group__0");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup_3(), "rule__ClassInstanceCreationExpression__Group_3__0");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup_3_1(), "rule__ClassInstanceCreationExpression__Group_3_1__0");
					put(grammarAccess.getRuleInvocationAccess().getGroup(), "rule__RuleInvocation__Group__0");
					put(grammarAccess.getRuleInvocationAccess().getGroup_2(), "rule__RuleInvocation__Group_2__0");
					put(grammarAccess.getRuleInvocationAccess().getGroup_2_1(), "rule__RuleInvocation__Group_2_1__0");
					put(grammarAccess.getRuleInvocationSuperAccess().getGroup(), "rule__RuleInvocationSuper__Group__0");
					put(grammarAccess.getFeatureMethodInvocationAccess().getGroup(), "rule__FeatureMethodInvocation__Group__0");
					put(grammarAccess.getFeatureMethodInvocationAccess().getGroup_1_0(), "rule__FeatureMethodInvocation__Group_1_0__0");
					put(grammarAccess.getFeatureMethodInvocationAccess().getGroup_3(), "rule__FeatureMethodInvocation__Group_3__0");
					put(grammarAccess.getFeatureMethodInvocationAccess().getGroup_3_1(), "rule__FeatureMethodInvocation__Group_3_1__0");
					put(grammarAccess.getNativeOperationInvocationAccess().getGroup(), "rule__NativeOperationInvocation__Group__0");
					put(grammarAccess.getNativeOperationInvocationAccess().getGroup_3(), "rule__NativeOperationInvocation__Group_3__0");
					put(grammarAccess.getNativeOperationInvocationAccess().getGroup_3_1(), "rule__NativeOperationInvocation__Group_3_1__0");
					put(grammarAccess.getFeatureFieldAccess().getGroup(), "rule__FeatureField__Group__0");
					put(grammarAccess.getFeatureFieldAccess().getGroup_1_0(), "rule__FeatureField__Group_1_0__0");
					put(grammarAccess.getVariableAccessAccess().getGroup_0(), "rule__VariableAccess__Group_0__0");
					put(grammarAccess.getVariableAccessAccess().getGroup_1(), "rule__VariableAccess__Group_1__0");
					put(grammarAccess.getVariableAccessAccess().getGroup_1_2_0(), "rule__VariableAccess__Group_1_2_0__0");
					put(grammarAccess.getStaticAccessAccess().getGroup(), "rule__StaticAccess__Group__0");
					put(grammarAccess.getStaticAccessAccess().getGroup_1_0(), "rule__StaticAccess__Group_1_0__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getAnnotationDeclAccess().getGroup(), "rule__AnnotationDecl__Group__0");
					put(grammarAccess.getAnnotationDeclAccess().getGroup_2(), "rule__AnnotationDecl__Group_2__0");
					put(grammarAccess.getAnnotationDeclAccess().getGroup_2_2(), "rule__AnnotationDecl__Group_2_2__0");
					put(grammarAccess.getAnnotationDeclAccess().getGroup_4(), "rule__AnnotationDecl__Group_4__0");
					put(grammarAccess.getAnnotationDeclAccess().getGroup_4_0_0(), "rule__AnnotationDecl__Group_4_0_0__0");
					put(grammarAccess.getAnnotationDeclAccess().getGroup_4_0_0_3_1(), "rule__AnnotationDecl__Group_4_0_0_3_1__0");
					put(grammarAccess.getAnnotationDeclAccess().getGroup_4_1(), "rule__AnnotationDecl__Group_4_1__0");
					put(grammarAccess.getAnnotationPropertyDeclAccess().getGroup(), "rule__AnnotationPropertyDecl__Group__0");
					put(grammarAccess.getAnnotationPropertyDeclAccess().getGroup_2_1(), "rule__AnnotationPropertyDecl__Group_2_1__0");
					put(grammarAccess.getAnnotationAccess().getGroup(), "rule__Annotation__Group__0");
					put(grammarAccess.getAnnotationAccess().getGroup_2(), "rule__Annotation__Group_2__0");
					put(grammarAccess.getAnnotationAccess().getGroup_2_2(), "rule__Annotation__Group_2_2__0");
					put(grammarAccess.getAnnotationPropertyAccess().getGroup(), "rule__AnnotationProperty__Group__0");
					put(grammarAccess.getModuleAccess().getPackageNameAssignment_0_1(), "rule__Module__PackageNameAssignment_0_1");
					put(grammarAccess.getModuleAccess().getNameAssignment_2(), "rule__Module__NameAssignment_2");
					put(grammarAccess.getModuleAccess().getImportsAssignment_4_1(), "rule__Module__ImportsAssignment_4_1");
					put(grammarAccess.getModuleAccess().getMetamodelDeclarationsAssignment_5_0(), "rule__Module__MetamodelDeclarationsAssignment_5_0");
					put(grammarAccess.getModuleAccess().getAnnotationDefinitionsAssignment_6_0(), "rule__Module__AnnotationDefinitionsAssignment_6_0");
					put(grammarAccess.getModuleAccess().getRuleDeclarationsAssignment_7(), "rule__Module__RuleDeclarationsAssignment_7");
					put(grammarAccess.getModuleReferenceAccess().getModuleAssignment(), "rule__ModuleReference__ModuleAssignment");
					put(grammarAccess.getMetamodelDeclarationAccess().getTypeAssignment_1(), "rule__MetamodelDeclaration__TypeAssignment_1");
					put(grammarAccess.getMetamodelDeclarationAccess().getNameAssignment_2(), "rule__MetamodelDeclaration__NameAssignment_2");
					put(grammarAccess.getMetamodelDeclarationAccess().getPropertiesAssignment_3_1_0(), "rule__MetamodelDeclaration__PropertiesAssignment_3_1_0");
					put(grammarAccess.getMetamodelDeclarationAccess().getPropertiesAssignment_3_1_1_1(), "rule__MetamodelDeclaration__PropertiesAssignment_3_1_1_1");
					put(grammarAccess.getMetamodelDeclarationAccess().getReplacesAssignment_4_1_0(), "rule__MetamodelDeclaration__ReplacesAssignment_4_1_0");
					put(grammarAccess.getMetamodelDeclarationAccess().getReplacesAssignment_4_1_1_1(), "rule__MetamodelDeclaration__ReplacesAssignment_4_1_1_1");
					put(grammarAccess.getPropertyAccess().getNameAssignment_0(), "rule__Property__NameAssignment_0");
					put(grammarAccess.getPropertyAccess().getValueAssignment_2(), "rule__Property__ValueAssignment_2");
					put(grammarAccess.getRuleDeclarationAccess().getAnnotationsAssignment_0(), "rule__RuleDeclaration__AnnotationsAssignment_0");
					put(grammarAccess.getRuleDeclarationAccess().getVisibilityAssignment_1(), "rule__RuleDeclaration__VisibilityAssignment_1");
					put(grammarAccess.getRuleDeclarationAccess().getExecAssignment_2(), "rule__RuleDeclaration__ExecAssignment_2");
					put(grammarAccess.getRuleDeclarationAccess().getTracedAssignment_3_0(), "rule__RuleDeclaration__TracedAssignment_3_0");
					put(grammarAccess.getRuleDeclarationAccess().getStealthAssignment_3_1(), "rule__RuleDeclaration__StealthAssignment_3_1");
					put(grammarAccess.getRuleDeclarationAccess().getVirtualAssignment_4(), "rule__RuleDeclaration__VirtualAssignment_4");
					put(grammarAccess.getRuleDeclarationAccess().getMultiAssignment_5(), "rule__RuleDeclaration__MultiAssignment_5");
					put(grammarAccess.getRuleDeclarationAccess().getNameAssignment_6(), "rule__RuleDeclaration__NameAssignment_6");
					put(grammarAccess.getRuleDeclarationAccess().getFormalParametersAssignment_8_0(), "rule__RuleDeclaration__FormalParametersAssignment_8_0");
					put(grammarAccess.getRuleDeclarationAccess().getFormalParametersAssignment_8_1_1(), "rule__RuleDeclaration__FormalParametersAssignment_8_1_1");
					put(grammarAccess.getRuleDeclarationAccess().getReturnParametersAssignment_10_2(), "rule__RuleDeclaration__ReturnParametersAssignment_10_2");
					put(grammarAccess.getRuleDeclarationAccess().getReturnParametersAssignment_10_3_1(), "rule__RuleDeclaration__ReturnParametersAssignment_10_3_1");
					put(grammarAccess.getRuleDeclarationAccess().getImplementedRulesAssignment_11_1(), "rule__RuleDeclaration__ImplementedRulesAssignment_11_1");
					put(grammarAccess.getRuleDeclarationAccess().getImplementedRulesAssignment_11_2_1(), "rule__RuleDeclaration__ImplementedRulesAssignment_11_2_1");
					put(grammarAccess.getRuleDeclarationAccess().getOverriddenRuleAssignment_12_1(), "rule__RuleDeclaration__OverriddenRuleAssignment_12_1");
					put(grammarAccess.getRuleDeclarationAccess().getExcludingRulesAssignment_13_1(), "rule__RuleDeclaration__ExcludingRulesAssignment_13_1");
					put(grammarAccess.getRuleDeclarationAccess().getExcludingRulesAssignment_13_2_1(), "rule__RuleDeclaration__ExcludingRulesAssignment_13_2_1");
					put(grammarAccess.getRuleDeclarationAccess().getTriggerAssignment_14(), "rule__RuleDeclaration__TriggerAssignment_14");
					put(grammarAccess.getRuleDeclarationAccess().getJavaSpecAssignment_15_1_0(), "rule__RuleDeclaration__JavaSpecAssignment_15_1_0");
					put(grammarAccess.getRuleDeclarationAccess().getBodyAssignment_15_2(), "rule__RuleDeclaration__BodyAssignment_15_2");
					put(grammarAccess.getSimpleRuleReferenceAccess().getRuleDeclarationAssignment_0(), "rule__SimpleRuleReference__RuleDeclarationAssignment_0");
					put(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesAssignment_2(), "rule__SimpleRuleReference__ParameterReferencesAssignment_2");
					put(grammarAccess.getSimpleRuleReferenceAccess().getParameterReferencesAssignment_3_1(), "rule__SimpleRuleReference__ParameterReferencesAssignment_3_1");
					put(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesAssignment_5_2(), "rule__SimpleRuleReference__ReturnReferencesAssignment_5_2");
					put(grammarAccess.getSimpleRuleReferenceAccess().getReturnReferencesAssignment_5_3_1(), "rule__SimpleRuleReference__ReturnReferencesAssignment_5_3_1");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getRuleDeclarationAssignment_0(), "rule__QualifiedRuleReference__RuleDeclarationAssignment_0");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesAssignment_2(), "rule__QualifiedRuleReference__ParameterReferencesAssignment_2");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getParameterReferencesAssignment_3_1(), "rule__QualifiedRuleReference__ParameterReferencesAssignment_3_1");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesAssignment_5_2(), "rule__QualifiedRuleReference__ReturnReferencesAssignment_5_2");
					put(grammarAccess.getQualifiedRuleReferenceAccess().getReturnReferencesAssignment_5_3_1(), "rule__QualifiedRuleReference__ReturnReferencesAssignment_5_3_1");
					put(grammarAccess.getSimpleParameterReferenceAccess().getTypeAssignment_0(), "rule__SimpleParameterReference__TypeAssignment_0");
					put(grammarAccess.getSimpleParameterReferenceAccess().getNameAssignment_1(), "rule__SimpleParameterReference__NameAssignment_1");
					put(grammarAccess.getQualifiedParameterReferenceAccess().getVardeclAssignment(), "rule__QualifiedParameterReference__VardeclAssignment");
					put(grammarAccess.getTriggerAccess().getTriggerRulesAssignment_2(), "rule__Trigger__TriggerRulesAssignment_2");
					put(grammarAccess.getTriggerAccess().getTriggerRulesAssignment_3_1(), "rule__Trigger__TriggerRulesAssignment_3_1");
					put(grammarAccess.getTriggerAccess().getWithAssignment_5_1(), "rule__Trigger__WithAssignment_5_1");
					put(grammarAccess.getTriggerAccess().getWhenAssignment_6_2(), "rule__Trigger__WhenAssignment_6_2");
					put(grammarAccess.getJavaSpecAccess().getPropertiesAssignment_2(), "rule__JavaSpec__PropertiesAssignment_2");
					put(grammarAccess.getJavaSpecAccess().getPropertiesAssignment_3_1(), "rule__JavaSpec__PropertiesAssignment_3_1");
					put(grammarAccess.getFormalParameterAccess().getAnnotationsAssignment_0(), "rule__FormalParameter__AnnotationsAssignment_0");
					put(grammarAccess.getFormalParameterAccess().getModifierAssignment_1(), "rule__FormalParameter__ModifierAssignment_1");
					put(grammarAccess.getFormalParameterAccess().getVardeclAssignment_2(), "rule__FormalParameter__VardeclAssignment_2");
					put(grammarAccess.getReturnParameterAccess().getAnnotationsAssignment_0(), "rule__ReturnParameter__AnnotationsAssignment_0");
					put(grammarAccess.getReturnParameterAccess().getModifierAssignment_1(), "rule__ReturnParameter__ModifierAssignment_1");
					put(grammarAccess.getReturnParameterAccess().getVardeclAssignment_2(), "rule__ReturnParameter__VardeclAssignment_2");
					put(grammarAccess.getReferenceTypeAccess().getMetamodelDeclarationAssignment_0(), "rule__ReferenceType__MetamodelDeclarationAssignment_0");
					put(grammarAccess.getReferenceTypeAccess().getEClassifierAssignment_2(), "rule__ReferenceType__EClassifierAssignment_2");
					put(grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeAssignment(), "rule__PrimitiveType__PrimitiveTypeAssignment");
					put(grammarAccess.getCollectionTypeAccess().getCollectionTypeAssignment_0(), "rule__CollectionType__CollectionTypeAssignment_0");
					put(grammarAccess.getCollectionTypeAccess().getTypeParAssignment_1_1(), "rule__CollectionType__TypeParAssignment_1_1");
					put(grammarAccess.getBlockAccess().getStatementsAssignment_2(), "rule__Block__StatementsAssignment_2");
					put(grammarAccess.getLocalVariableDeclarationStatementAccess().getLocalVariableDeclarationAssignment_0(), "rule__LocalVariableDeclarationStatement__LocalVariableDeclarationAssignment_0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getVardeclAssignment_0(), "rule__LocalVariableDeclaration__VardeclAssignment_0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getExpressionAssignment_1_1(), "rule__LocalVariableDeclaration__ExpressionAssignment_1_1");
					put(grammarAccess.getTypedVarDeclarationAccess().getTypeAssignment_0(), "rule__TypedVarDeclaration__TypeAssignment_0");
					put(grammarAccess.getTypedVarDeclarationAccess().getNameAssignment_1(), "rule__TypedVarDeclaration__NameAssignment_1");
					put(grammarAccess.getInferredVarDeclarationAccess().getTypeAssignment_0(), "rule__InferredVarDeclaration__TypeAssignment_0");
					put(grammarAccess.getInferredVarDeclarationAccess().getNameAssignment_1(), "rule__InferredVarDeclaration__NameAssignment_1");
					put(grammarAccess.getExpressionStatementAccess().getStatementExpressionAssignment_0(), "rule__ExpressionStatement__StatementExpressionAssignment_0");
					put(grammarAccess.getStatementExpressionAccess().getOperatorAssignment_4_1_0_1(), "rule__StatementExpression__OperatorAssignment_4_1_0_1");
					put(grammarAccess.getStatementExpressionAccess().getExpressionAssignment_4_1_0_2(), "rule__StatementExpression__ExpressionAssignment_4_1_0_2");
					put(grammarAccess.getStatementExpressionAccess().getLhsAssignment_4_1_1_1_1(), "rule__StatementExpression__LhsAssignment_4_1_1_1_1");
					put(grammarAccess.getStatementExpressionAccess().getOperatorAssignment_4_1_1_2(), "rule__StatementExpression__OperatorAssignment_4_1_1_2");
					put(grammarAccess.getStatementExpressionAccess().getExpressionAssignment_4_1_1_3(), "rule__StatementExpression__ExpressionAssignment_4_1_1_3");
					put(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2(), "rule__ReturnStatement__ExpressionAssignment_2");
					put(grammarAccess.getIfStatementAccess().getExpressionAssignment_2(), "rule__IfStatement__ExpressionAssignment_2");
					put(grammarAccess.getIfStatementAccess().getTrueStatementAssignment_4(), "rule__IfStatement__TrueStatementAssignment_4");
					put(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1(), "rule__IfStatement__ElseStatementAssignment_5_1");
					put(grammarAccess.getWhileStatementAccess().getExpressionAssignment_2(), "rule__WhileStatement__ExpressionAssignment_2");
					put(grammarAccess.getWhileStatementAccess().getStatementAssignment_4(), "rule__WhileStatement__StatementAssignment_4");
					put(grammarAccess.getDoStatementAccess().getStatementAssignment_1(), "rule__DoStatement__StatementAssignment_1");
					put(grammarAccess.getDoStatementAccess().getExpressionAssignment_4(), "rule__DoStatement__ExpressionAssignment_4");
					put(grammarAccess.getForInitAccess().getStatementExpressionsAssignment_1_0(), "rule__ForInit__StatementExpressionsAssignment_1_0");
					put(grammarAccess.getForInitAccess().getVarDeclarationsAssignment_1_1_0(), "rule__ForInit__VarDeclarationsAssignment_1_1_0");
					put(grammarAccess.getForInitAccess().getStatementExpressionsAssignment_1_1_1_0_1(), "rule__ForInit__StatementExpressionsAssignment_1_1_1_0_1");
					put(grammarAccess.getForInitAccess().getVarDeclarationsAssignment_1_1_1_1(), "rule__ForInit__VarDeclarationsAssignment_1_1_1_1");
					put(grammarAccess.getForUpdateAccess().getStatementExpressionAssignment_0(), "rule__ForUpdate__StatementExpressionAssignment_0");
					put(grammarAccess.getForUpdateAccess().getStatementExpressionAssignment_1_1(), "rule__ForUpdate__StatementExpressionAssignment_1_1");
					put(grammarAccess.getForStatementAccess().getLoopVariableAssignment_2_0_0(), "rule__ForStatement__LoopVariableAssignment_2_0_0");
					put(grammarAccess.getForStatementAccess().getExpressionAssignment_2_0_2(), "rule__ForStatement__ExpressionAssignment_2_0_2");
					put(grammarAccess.getForStatementAccess().getForInitAssignment_2_1_0(), "rule__ForStatement__ForInitAssignment_2_1_0");
					put(grammarAccess.getForStatementAccess().getExpressionAssignment_2_1_2(), "rule__ForStatement__ExpressionAssignment_2_1_2");
					put(grammarAccess.getForStatementAccess().getForUpdateAssignment_2_1_4(), "rule__ForStatement__ForUpdateAssignment_2_1_4");
					put(grammarAccess.getForStatementAccess().getStatementAssignment_4(), "rule__ForStatement__StatementAssignment_4");
					put(grammarAccess.getLoopVariableAccess().getVardeclAssignment(), "rule__LoopVariable__VardeclAssignment");
					put(grammarAccess.getThrowStatementAccess().getExpressionAssignment_1(), "rule__ThrowStatement__ExpressionAssignment_1");
					put(grammarAccess.getTryStatementAccess().getTryBlockAssignment_1(), "rule__TryStatement__TryBlockAssignment_1");
					put(grammarAccess.getTryStatementAccess().getCatchesAssignment_2(), "rule__TryStatement__CatchesAssignment_2");
					put(grammarAccess.getTryStatementAccess().getFinallyBlockAssignment_3_1(), "rule__TryStatement__FinallyBlockAssignment_3_1");
					put(grammarAccess.getCatchAccess().getFormalParameterAssignment_2(), "rule__Catch__FormalParameterAssignment_2");
					put(grammarAccess.getCatchAccess().getBlockAssignment_4(), "rule__Catch__BlockAssignment_4");
					put(grammarAccess.getExpression_10Access().getVariableAssignment_0_1(), "rule__Expression_10__VariableAssignment_0_1");
					put(grammarAccess.getExpression_10Access().getExpressionAssignment_0_3(), "rule__Expression_10__ExpressionAssignment_0_3");
					put(grammarAccess.getExpression_1Access().getOpAssignment_1_1(), "rule__Expression_1__OpAssignment_1_1");
					put(grammarAccess.getExpression_1Access().getRhsAssignment_1_2(), "rule__Expression_1__RhsAssignment_1_2");
					put(grammarAccess.getExpression_2Access().getOpAssignment_1_1(), "rule__Expression_2__OpAssignment_1_1");
					put(grammarAccess.getExpression_2Access().getRhsAssignment_1_2(), "rule__Expression_2__RhsAssignment_1_2");
					put(grammarAccess.getExpression_3Access().getOpAssignment_1_1(), "rule__Expression_3__OpAssignment_1_1");
					put(grammarAccess.getExpression_3Access().getRhsAssignment_1_2(), "rule__Expression_3__RhsAssignment_1_2");
					put(grammarAccess.getExpression_5Access().getOpAssignment_1_1(), "rule__Expression_5__OpAssignment_1_1");
					put(grammarAccess.getExpression_5Access().getRhsAssignment_1_2(), "rule__Expression_5__RhsAssignment_1_2");
					put(grammarAccess.getExpression_6Access().getTypeAssignment_0_2(), "rule__Expression_6__TypeAssignment_0_2");
					put(grammarAccess.getExpression_6Access().getExpressionAssignment_0_4(), "rule__Expression_6__ExpressionAssignment_0_4");
					put(grammarAccess.getExpression_7Access().getExpressionAssignment_1_2(), "rule__Expression_7__ExpressionAssignment_1_2");
					put(grammarAccess.getExpression_8Access().getOpAssignment_1_1(), "rule__Expression_8__OpAssignment_1_1");
					put(grammarAccess.getExpression_8Access().getExpressionAssignment_1_2(), "rule__Expression_8__ExpressionAssignment_1_2");
					put(grammarAccess.getExpression_9Access().getTypeAssignment_1_2(), "rule__Expression_9__TypeAssignment_1_2");
					put(grammarAccess.getStringLiteralAccess().getStringValueAssignment(), "rule__StringLiteral__StringValueAssignment");
					put(grammarAccess.getIntLiteralAccess().getIntValueAssignment(), "rule__IntLiteral__IntValueAssignment");
					put(grammarAccess.getRealLiteralAccess().getFloatValueAssignment(), "rule__RealLiteral__FloatValueAssignment");
					put(grammarAccess.getBooleanLiteralAccess().getBooleanValueAssignment_1_0(), "rule__BooleanLiteral__BooleanValueAssignment_1_0");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeAssignment_1(), "rule__ClassInstanceCreationExpression__TypeAssignment_1");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsAssignment_3_0(), "rule__ClassInstanceCreationExpression__ArgumentsAssignment_3_0");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getArgumentsAssignment_3_1_1(), "rule__ClassInstanceCreationExpression__ArgumentsAssignment_3_1_1");
					put(grammarAccess.getRuleInvocationAccess().getRuleDeclarationAssignment_0(), "rule__RuleInvocation__RuleDeclarationAssignment_0");
					put(grammarAccess.getRuleInvocationAccess().getArgumentsAssignment_2_0(), "rule__RuleInvocation__ArgumentsAssignment_2_0");
					put(grammarAccess.getRuleInvocationAccess().getArgumentsAssignment_2_1_1(), "rule__RuleInvocation__ArgumentsAssignment_2_1_1");
					put(grammarAccess.getFeatureMethodInvocationAccess().getExpressionAssignment_1_0_1(), "rule__FeatureMethodInvocation__ExpressionAssignment_1_0_1");
					put(grammarAccess.getFeatureMethodInvocationAccess().getNameAssignment_1_1(), "rule__FeatureMethodInvocation__NameAssignment_1_1");
					put(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsAssignment_3_0(), "rule__FeatureMethodInvocation__ArgumentsAssignment_3_0");
					put(grammarAccess.getFeatureMethodInvocationAccess().getArgumentsAssignment_3_1_1(), "rule__FeatureMethodInvocation__ArgumentsAssignment_3_1_1");
					put(grammarAccess.getNativeOperationInvocationAccess().getNameAssignment_1(), "rule__NativeOperationInvocation__NameAssignment_1");
					put(grammarAccess.getNativeOperationInvocationAccess().getArgumentsAssignment_3_0(), "rule__NativeOperationInvocation__ArgumentsAssignment_3_0");
					put(grammarAccess.getNativeOperationInvocationAccess().getArgumentsAssignment_3_1_1(), "rule__NativeOperationInvocation__ArgumentsAssignment_3_1_1");
					put(grammarAccess.getFeatureFieldAccess().getExpressionAssignment_1_0_1(), "rule__FeatureField__ExpressionAssignment_1_0_1");
					put(grammarAccess.getFeatureFieldAccess().getNameAssignment_1_1(), "rule__FeatureField__NameAssignment_1_1");
					put(grammarAccess.getVariableAccessAccess().getPrefixOperatorAssignment_0_0(), "rule__VariableAccess__PrefixOperatorAssignment_0_0");
					put(grammarAccess.getVariableAccessAccess().getVariableAssignment_0_1(), "rule__VariableAccess__VariableAssignment_0_1");
					put(grammarAccess.getVariableAccessAccess().getFeaturesAssignment_0_2(), "rule__VariableAccess__FeaturesAssignment_0_2");
					put(grammarAccess.getVariableAccessAccess().getVariableAssignment_1_0(), "rule__VariableAccess__VariableAssignment_1_0");
					put(grammarAccess.getVariableAccessAccess().getFeaturesAssignment_1_1(), "rule__VariableAccess__FeaturesAssignment_1_1");
					put(grammarAccess.getVariableAccessAccess().getDefaultAssignment_1_2_0_1(), "rule__VariableAccess__DefaultAssignment_1_2_0_1");
					put(grammarAccess.getVariableAccessAccess().getPostfixOperatorAssignment_1_2_1(), "rule__VariableAccess__PostfixOperatorAssignment_1_2_1");
					put(grammarAccess.getStaticAccessAccess().getExpressionAssignment_1_0_1(), "rule__StaticAccess__ExpressionAssignment_1_0_1");
					put(grammarAccess.getStaticAccessAccess().getTypeAssignment_1_1(), "rule__StaticAccess__TypeAssignment_1_1");
					put(grammarAccess.getStaticAccessAccess().getFeaturesAssignment_2(), "rule__StaticAccess__FeaturesAssignment_2");
					put(grammarAccess.getAnnotationsDefinitionAccess().getAnnotationDeclsAssignment(), "rule__AnnotationsDefinition__AnnotationDeclsAssignment");
					put(grammarAccess.getAnnotationDeclAccess().getNameAssignment_1(), "rule__AnnotationDecl__NameAssignment_1");
					put(grammarAccess.getAnnotationDeclAccess().getTargetsAssignment_2_1(), "rule__AnnotationDecl__TargetsAssignment_2_1");
					put(grammarAccess.getAnnotationDeclAccess().getTargetsAssignment_2_2_1(), "rule__AnnotationDecl__TargetsAssignment_2_2_1");
					put(grammarAccess.getAnnotationDeclAccess().getValuetypeAssignment_4_0_0_1(), "rule__AnnotationDecl__ValuetypeAssignment_4_0_0_1");
					put(grammarAccess.getAnnotationDeclAccess().getManyAssignment_4_0_0_2(), "rule__AnnotationDecl__ManyAssignment_4_0_0_2");
					put(grammarAccess.getAnnotationDeclAccess().getRequiredAssignment_4_0_0_3_0(), "rule__AnnotationDecl__RequiredAssignment_4_0_0_3_0");
					put(grammarAccess.getAnnotationDeclAccess().getDefaultAssignment_4_0_0_3_1_1(), "rule__AnnotationDecl__DefaultAssignment_4_0_0_3_1_1");
					put(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAssignment_4_0_1(), "rule__AnnotationDecl__PropertyDeclsAssignment_4_0_1");
					put(grammarAccess.getAnnotationDeclAccess().getPropertyDeclsAssignment_4_1_1(), "rule__AnnotationDecl__PropertyDeclsAssignment_4_1_1");
					put(grammarAccess.getAnnotationPropertyDeclAccess().getTypeAssignment_0(), "rule__AnnotationPropertyDecl__TypeAssignment_0");
					put(grammarAccess.getAnnotationPropertyDeclAccess().getNameAssignment_1(), "rule__AnnotationPropertyDecl__NameAssignment_1");
					put(grammarAccess.getAnnotationPropertyDeclAccess().getRequiredAssignment_2_0(), "rule__AnnotationPropertyDecl__RequiredAssignment_2_0");
					put(grammarAccess.getAnnotationPropertyDeclAccess().getDefaultAssignment_2_1_1(), "rule__AnnotationPropertyDecl__DefaultAssignment_2_1_1");
					put(grammarAccess.getAnnotationAccess().getDeclAssignment_1(), "rule__Annotation__DeclAssignment_1");
					put(grammarAccess.getAnnotationAccess().getValuesAssignment_2_1_0(), "rule__Annotation__ValuesAssignment_2_1_0");
					put(grammarAccess.getAnnotationAccess().getPropertiesAssignment_2_1_1(), "rule__Annotation__PropertiesAssignment_2_1_1");
					put(grammarAccess.getAnnotationAccess().getValuesAssignment_2_2_1_0(), "rule__Annotation__ValuesAssignment_2_2_1_0");
					put(grammarAccess.getAnnotationAccess().getPropertiesAssignment_2_2_1_1(), "rule__Annotation__PropertiesAssignment_2_2_1_1");
					put(grammarAccess.getAnnotationPropertyAccess().getDeclAssignment_0(), "rule__AnnotationProperty__DeclAssignment_0");
					put(grammarAccess.getAnnotationPropertyAccess().getValueAssignment_2(), "rule__AnnotationProperty__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.jevopi.mitra2.ui.contentassist.antlr.internal.InternalMitraParser typedParser = (de.jevopi.mitra2.ui.contentassist.antlr.internal.InternalMitraParser) parser;
			typedParser.entryRuleModule();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MitraGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MitraGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
